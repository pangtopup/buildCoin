{"version":3,"sources":["components/Coin/Member/TransferForm/TransferForm.js","components/Coin/Member/TransferDialog/TransferDialog.js","history.js","components/Coin/MainPage/Menu.js","components/Coin/MainPage/Header.js","components/Coin/ItemPlace/ItemDetail.js","components/Coin/Member/RewardPlace/RewardDetail.js","components/Coin/Member/ActivityPlace/ActivityDetail.js","components/Coin/DragDropImage/DragDropImage.js","components/Coin/ToggleBackdrop/ToggleBackdrop.js","components/Coin/Admin/RewardManager/RewardForm.js","components/Coin/Admin/RewardManager/RewardManager.js","components/Coin/Admin/ActivityManager/ActivityForm.js","components/Coin/Admin/ActivityManager/ActivityManager.js","components/Coin/TransactionTable/TransactionTable.js","components/Coin/Admin/ActivityManager/ExportApplicant.js","components/Coin/Admin/ActivityManager/ApplicantManager.js","source/scg-logo.png","components/Coin/MainPage/Login.js","components/Coin/CarouselItem/CarouselItem.js","components/Coin/Member/CarouselList/ActivityCarousel.js","components/Coin/Member/CarouselList/RewardCarousel.js","components/Coin/Member/LeaderBoard/LeaderBoard.js","components/Coin/MainPage/Home.js","components/Coin/Member/TransferTransaction/TransferTransaction.js","components/Coin/MainPage/Transfer.js","components/Coin/ItemPlace/ItemList.js","components/Coin/Member/RewardPlace/RewardPlace.js","components/Coin/Member/ActivityPlace/ActivityPlace.js","components/Coin/Member/RedeemTransaction/RedeemTransaction.js","components/Coin/Member/ActivityTransaction/ActivityTransaction.js","components/Coin/Admin/TransferTransaction/TransferTransaction.js","components/Coin/Admin/RedeemTransaction/RedeemTransaction.js","components/Coin/Admin/RewardManager/RewardList.js","components/Coin/Admin/ActivityManager/ActivityList.js","Routes.js","App.js","index.js"],"names":["TransferForm","useForm","register","errors","handleSubmit","useState","member","setMember","queryMemberAndCoin","a","name","nickname","transferCoin","data","console","log","JSON","stringify","useEffect","setTimeout","className","fontSize","onSubmit","Autocomplete","options","getOptionLabel","option","renderInput","params","TextField","label","variant","fullWidth","inputRef","required","error","reciever","helperText","type","amount","reason","Button","color","endIcon","Skeleton","width","animation","height","TransferDialog","open","handleOpen","handleClose","Dialog","onClose","style","window","innerWidth","history","MenuUser","path","icon","statusItem","transform","parent","MenuAdmin","MenuManager","useStyles","makeStyles","theme","root","maxWidth","backgroundColor","nested","paddingLeft","spacing","MenuItem","props","menuSelected","handleSelected","Tooltip","title","placement","ListItem","button","selected","onClick","ListItemIcon","ListItemText","primary","MenuSubItem","classes","Collapse","in","split","timeout","unmountOnExit","List","component","disablePadding","Menu","loginAuth","setMenuSelected","setOpen","status","previousMenu","push","Divider","map","value","key","isAuthenticated","drawerWidth","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","drawerColor","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","useTheme","openTransfer","setOpenTransfer","handleTransferOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","edge","Typography","noWrap","right","cursor","Drawer","paper","direction","ItemDetail","itemType","id","image","detail","place","date","price","reward","coin","applyDate","expiryDate","netPrice","handleNetPrice","validateNetPrice","src","alt","InputProps","readOnly","validate","Slider","defaultValue","step","min","max","parseInt","valueLabelDisplay","marks","onChange","RewardDetail","item","setItem","setNetPrice","confirm","match","event","ActivityDetail","baseStyle","borderWidth","borderRadius","borderColor","borderStyle","outline","activeStyle","acceptStyle","rejectStyle","DragDropImage","setImage","useDropzone","accept","acceptedFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","file","selectedFile","imagePreviewUrl","URL","createObjectURL","useMemo","backdrop","ToggleBackdrop","forwardRef","ref","setBackdrop","toggleBackdrop","sleep","milliseconds","Promise","resolve","useImperativeHandle","Backdrop","CircularProgress","AddReward","useRef","enqueueSnackbar","useSnackbar","setStatus","rewardType","setRewardType","coinType","setCoinType","exp","formType","setValue","getValues","state","setState","imagePreview","Date","selectedDate","handleDateChange","updateReward","current","e","reader","FileReader","target","files","onloadend","result","readAsDataURL","htmlFor","fontFamily","maxLength","utils","DateFnsUtils","DatePicker","inputVariant","disablePast","autoOk","format","startIcon","add","oldValue","enrollStartDate","enrollEndDate","selectedEnrollStartDate","handleEnrollStartDateChange","selectedEnrollEndDate","handleEnrollEndDateChange","updateActivity","maxDate","minDate","TableTitle","TransactionTable","transaction","showDetail","TableContainer","Card","columns","detailPanel","tooltip","render","rowData","onRowClick","togglePanel","headerStyle","textAlign","cellStyle","pageSizeOptions","localization","body","emptyDataSourceMessage","TransactionManagerTable","handleApprove","handleReject","actions","actionsColumnIndex","ActivityPendingTable","ActivitySuccessTable","selection","ExcelFile","ReactExport","ExcelSheet","ExportApplicant","activity","applicant","setData","wch","filename","element","dataSet","ApplicantManager","setActivity","activityPending","applicantList","setApplicantList","setApplicant","handleAddApplicant","memberID","field","margin","marginTop","media","paddingBottom","version","showPassword","LoginButton","withStyles","palette","getContrastText","red","user","pass","LoginPage","setParentState","redirectToReferrer","setRedirectToReferrer","isInvalid","setIsInvalid","CardMedia","logo","CardContent","align","i","username","password","authenticate","disabled","submit","Alert","severity","flexWrap","overflow","background","gridList","titleBar","CarouselItem","items","handleClick","GridList","cols","GridListTile","GridListTileBar","subtitle","actionIcon","RewardCarousel","setItems","LeaderBoardList","no","counterReset","department","coinMonth","coinSummary","LeaderBoard","setCoin","leaderDetail","setLeaderDetail","handleChangeCoin","queryLeaderboard","employeeGold","managerGold","self","wallet","Home","marginBottom","Paper","animationIn","animationOut","isVisible","process","CoinTransaction","sendTransaction","setSendTransaction","recieveTransaction","setRecieveTransaction","actor","inspector","avatar","paddingTop","Reward","subTitle","limitDate","isLoad","CardHeader","Avatar","subheader","Fragment","CardActions","disableSpacing","RewardPlace","queryReward","setRewards","rewards","heart","gold","filter","setFilter","React","page","setPage","handleChoose","checked","FormGroup","row","FormControlLabel","control","Checkbox","checkedIcon","Array","from","length","v","Pagination","count","ActivityPlace","queryActivity","setActivities","activities","RedeemTransaction","queryRedeem","setTransaction","redeemID","ActivityTransaction","queryActivityTransaction","activityID","TransferTransaction","transactionSuccess","setTransactionSuccess","successfulTransaction","setSuccessfulTransaction","transactionID","sender","Switch","inputProps","RewardList","handleEditReward","isFreeAction","ActivityList","enrollDate","handleEditActivity","handleEditApplicant","Routes","Logout","withRouter","signout","PrivateRoute","Component","rest","goBack","to","pathname","location","exact","Transfer","TransferTransactionAdmin","RedeemTransactionAdmin","RewardManager","ActivityManager","cb","this","App","maxSnack","autoHideDuration","hideIconVariant","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.1a34d596.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\n// Validator\nimport { useForm } from \"react-hook-form\";\n\n// Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Button from \"@material-ui/core/Button\";\n\n// Icons\nimport SendIcon from \"@material-ui/icons/Send\";\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\n\n// Backdrop and Notification\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n// import ToggleBackdrop from \"./../../ToggleBackdrop/ToggleBackdrop\";\n// import { useSnackbar } from \"notistack\";\n\nexport default function TransferForm() {\n  // Backdrop and Notification\n  // const ref = useRef(null);\n  // const { enqueueSnackbar } = useSnackbar();\n  // const [statusNoti, setStatusNoti] = useState(null);\n  // end Backdrop and Notification\n\n  // Validators\n  const { register, errors, handleSubmit } = useForm();\n  const onSubmit = data => {\n    transferCoin(data);\n  };\n  // end Validators\n\n  // Useful States\n  const [member, setMember] = useState(null);\n  // const [coin, setCoin] = useState(null);\n  // end Useful states\n\n  // Process handler\n  const queryMemberAndCoin = async () => {\n    // Toggle Backdrop\n    // ref.current.toggleBackdrop();\n    // await ref.current.sleep(2000);\n    setMember([\n      { name: \"Wirasut\", nickname: \"kane\" },\n      { name: \"Kobsak\", nickname: \"perm\" },\n      { name: \"Visavej\", nickname: \"ice\" },\n      { name: \"Sorrasak\", nickname: \"toey\" }\n    ]);\n    // setCoin([\"Gold\", \"Heart\"]);\n    // Toggle Backdrop and show notification\n    // ref.current.toggleBackdrop();\n  };\n\n  const transferCoin = async data => {\n    // Toggle Backdrop\n    // ref.current.toggleBackdrop();\n    // Process\n    // await ref.current.sleep(2000);\n    console.log(JSON.stringify(data, null));\n    // setStatusNoti(!statusNoti);\n    // Toggle Backdrop and show notification\n    // ref.current.toggleBackdrop();\n    // if (statusNoti !== null) {\n    //   if (statusNoti) {\n    //     enqueueSnackbar(\"Transfer successful\", {\n    //       variant: \"success\"\n    //     });\n    //   } else {\n    //     enqueueSnackbar(\"Something went wrong!\", {\n    //       variant: \"error\"\n    //     });\n    //   }\n    // }\n\n    // setStatusNoti(null);\n  };\n  // end Process handler\n\n  useEffect(() => {\n    setTimeout(() => {\n      queryMemberAndCoin();\n    }, 1000);\n  }, []);\n\n  return (\n    <div>\n      {member ? (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              <AccountBalanceWalletIcon\n                fontSize=\"large\"\n                className=\"colorDefault2\"\n              />{\" \"}\n              &nbsp;Transfer\n            </h5>\n            <h6 className=\"card-subtitle text-muted\">Send coin to :</h6>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"col-md-12 pt-4\">\n                <Autocomplete\n                  options={member}\n                  getOptionLabel={option => option.name}\n                  renderInput={params => (\n                    <TextField\n                      {...params}\n                      name=\"reciever\"\n                      label=\"Reciever\"\n                      variant=\"outlined\"\n                      fullWidth\n                      inputRef={register({ required: true })}\n                      error={!!errors.reciever}\n                      helperText={\n                        errors.reciever &&\n                        (errors.reciever.type === \"required\" &&\n                          \"Please select reciever\")\n                      }\n                    />\n                  )}\n                />\n              </div>\n              <div className=\"col-md-12 pt-3\">\n                <TextField\n                  type=\"number\"\n                  name=\"amount\"\n                  label=\"Amount\"\n                  variant=\"outlined\"\n                  fullWidth\n                  inputRef={register({ required: true })}\n                  error={!!errors.amount}\n                  helperText={\n                    errors.amount &&\n                    (errors.amount.type === \"required\" &&\n                      \"Please fill amount of coin\")\n                  }\n                />\n              </div>\n              <div className=\"col-md-12 pt-3\">\n                <TextField\n                  type=\"text\"\n                  name=\"reason\"\n                  label=\"Reason\"\n                  variant=\"outlined\"\n                  fullWidth\n                  inputRef={register({ required: true })}\n                  error={!!errors.reason}\n                  helperText={\n                    errors.reason &&\n                    (errors.reason.type === \"required\" &&\n                      \"Please fill transfer reason\")\n                  }\n                />\n              </div>\n              <div className=\"col-md-12 pt-4 text-center\">\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  endIcon={<SendIcon />}\n                >\n                  Send\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <Skeleton width=\"100%\" animation=\"wave\" />\n          <Skeleton variant=\"rect\" width=\"100%\" height={100} animation=\"wave\" />\n          <Skeleton width=\"100%\" animation=\"wave\" />\n          <Skeleton width=\"100%\" animation=\"wave\" />\n          <Skeleton variant=\"rect\" width=\"100%\" height={220} animation=\"wave\" />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\n// Components\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nimport TransferForm from \"./../TransferForm/TransferForm\";\r\n\r\nexport default function TransferDialog({ open, handleOpen, handleClose }) {\r\n  return (\r\n    <div>\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <div\r\n          style={\r\n            window.innerWidth < 720 ? { width: \"250px\" } : { width: \"500px\" }\r\n          }\r\n        >\r\n          <TransferForm />\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { createBrowserHistory as history } from \"history\";\r\n\r\nexport default history();\r\n","import React, { useState } from \"react\";\r\n\r\n// Components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// Icons\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\r\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\n\r\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\r\nimport RedeemIcon from \"@material-ui/icons/Redeem\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\n\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\n\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\n// History\r\nimport history from \"./../../../history\";\r\n\r\n// status :\r\n// 1 = main menu,\r\n// 2 = main menu with sub ItemDetail,\r\n// 3 = subitem\r\n\r\nconst MenuUser = [\r\n  {\r\n    path: \"\",\r\n    icon: <HomeIcon />,\r\n    name: \"Home\",\r\n    statusItem: 1\r\n  },\r\n  {\r\n    path: \"transfer\",\r\n    icon: <ImportExportIcon style={{ transform: \"rotate(90deg)\" }} />,\r\n    name: \"Transfer\",\r\n    statusItem: 1\r\n  },\r\n  {\r\n    path: \"reward\",\r\n    icon: <FastfoodIcon />,\r\n    name: \"Reward\",\r\n    statusItem: 1\r\n  },\r\n  {\r\n    path: \"activity\",\r\n    icon: <AccessibilityNewIcon />,\r\n    name: \"Activity\",\r\n    statusItem: 1\r\n  },\r\n  {\r\n    path: \"transaction/\",\r\n    icon: <HistoryIcon />,\r\n    name: \"Transaction\",\r\n    statusItem: 2\r\n  },\r\n  {\r\n    path: \"transaction/redeem\",\r\n    icon: <RedeemIcon />,\r\n    name: \"Redeem\",\r\n    statusItem: 3,\r\n    parent: \"transaction\"\r\n  },\r\n  {\r\n    path: \"transaction/activity\",\r\n    icon: <EventNoteIcon />,\r\n    name: \"Activity\",\r\n    statusItem: 3,\r\n    parent: \"transaction\"\r\n  }\r\n];\r\n\r\nconst MenuAdmin = [\r\n  {\r\n    path: \"transfering\",\r\n    icon: <TelegramIcon />,\r\n    name: \"Transferring\",\r\n    statusItem: 1\r\n  },\r\n  {\r\n    path: \"redemption\",\r\n    icon: <RedeemIcon />,\r\n    name: \"Redemption\",\r\n    statusItem: 1\r\n  },\r\n  {\r\n    path: \"manage/\",\r\n    icon: <SettingsIcon />,\r\n    name: \"Manage\",\r\n    statusItem: 2\r\n  },\r\n  {\r\n    path: \"manage/reward\",\r\n    icon: <StoreIcon />,\r\n    name: \"Reward\",\r\n    statusItem: 3,\r\n    parent: \"manage\"\r\n  },\r\n  {\r\n    path: \"manage/activity\",\r\n    icon: <EventNoteIcon />,\r\n    name: \"Activity\",\r\n    statusItem: 3,\r\n    parent: \"manage\"\r\n  }\r\n];\r\n\r\nconst MenuManager = [\r\n  {\r\n    path: \"transfering\",\r\n    icon: <TelegramIcon />,\r\n    name: \"Transferring\",\r\n    statusItem: 1\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: \"#fff9c4\"\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst MenuItem = props => {\r\n  const {\r\n    path,\r\n    icon,\r\n    name,\r\n    statusItem,\r\n    menuSelected,\r\n    handleSelected,\r\n    open\r\n  } = props;\r\n\r\n  return (\r\n    <Tooltip title={name} placement=\"right\">\r\n      <ListItem\r\n        button\r\n        selected={path === menuSelected ? true : false}\r\n        onClick={() => handleSelected(path, statusItem)}\r\n      >\r\n        <ListItemIcon\r\n          className={path === menuSelected ? \"colorDefault3\" : null}\r\n        >\r\n          {icon}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          className={path === menuSelected ? \"colorDefault3\" : null}\r\n          primary={name}\r\n        />\r\n\r\n        {statusItem === 2 ? (\r\n          path === menuSelected && open ? (\r\n            <ExpandLess />\r\n          ) : (\r\n            <ExpandMore />\r\n          )\r\n        ) : null}\r\n      </ListItem>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nconst MenuSubItem = props => {\r\n  const classes = useStyles();\r\n  const {\r\n    path,\r\n    icon,\r\n    name,\r\n    menuSelected,\r\n    handleSelected,\r\n    open,\r\n    parent\r\n  } = props;\r\n\r\n  return (\r\n    <Collapse\r\n      in={parent === menuSelected.split(\"/\")[0] && open ? true : false}\r\n      timeout=\"auto\"\r\n      unmountOnExit\r\n      onClick={() => handleSelected(path, 3)}\r\n    >\r\n      <List component=\"div\" disablePadding>\r\n        <Tooltip title={name} placement=\"right\">\r\n          <ListItem\r\n            button\r\n            className={classes.nested}\r\n            selected={path === menuSelected ? true : false}\r\n          >\r\n            <ListItemIcon\r\n              className={path === menuSelected ? \"colorDefault3\" : null}\r\n            >\r\n              {icon}\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              className={path === menuSelected ? \"colorDefault3\" : null}\r\n              primary={name}\r\n            />\r\n          </ListItem>\r\n        </Tooltip>\r\n      </List>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default function Menu({ loginAuth, menuSelected, setMenuSelected }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleSelected = (path, status) => {\r\n    let previousMenu = menuSelected;\r\n    setMenuSelected(path);\r\n\r\n    if (status !== 2) {\r\n      history.push(`/${path}`);\r\n    } else {\r\n      if (path !== previousMenu.split(\"/\")[0] + \"/\") {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(!open);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Divider />\r\n      <List>\r\n        {MenuUser.map(value => {\r\n          return value.statusItem !== 3 ? (\r\n            <MenuItem\r\n              key={value.path + value.name}\r\n              path={value.path}\r\n              icon={value.icon}\r\n              name={value.name}\r\n              menuSelected={menuSelected}\r\n              handleSelected={handleSelected}\r\n              statusItem={value.statusItem}\r\n              open={open}\r\n            />\r\n          ) : (\r\n            <MenuSubItem\r\n              key={value.path + value.name}\r\n              path={value.path}\r\n              icon={value.icon}\r\n              name={value.name}\r\n              menuSelected={menuSelected}\r\n              handleSelected={handleSelected}\r\n              open={open}\r\n              parent={value.parent}\r\n            />\r\n          );\r\n        })}\r\n      </List>\r\n      {loginAuth.isAuthenticated !== \"3\" && (\r\n        <div>\r\n          <Divider />\r\n          <List>\r\n            {loginAuth.isAuthenticated === \"1\"\r\n              ? MenuAdmin.map(value => {\r\n                  return value.statusItem !== 3 ? (\r\n                    <MenuItem\r\n                      key={value.path + value.name}\r\n                      path={value.path}\r\n                      icon={value.icon}\r\n                      name={value.name}\r\n                      menuSelected={menuSelected}\r\n                      handleSelected={handleSelected}\r\n                      statusItem={value.statusItem}\r\n                      open={open}\r\n                    />\r\n                  ) : (\r\n                    <MenuSubItem\r\n                      key={value.path + value.name}\r\n                      path={value.path}\r\n                      icon={value.icon}\r\n                      name={value.name}\r\n                      menuSelected={menuSelected}\r\n                      handleSelected={handleSelected}\r\n                      open={open}\r\n                      parent={value.parent}\r\n                    />\r\n                  );\r\n                })\r\n              : MenuManager.map(value => {\r\n                  return value.statusItem !== 3 ? (\r\n                    <MenuItem\r\n                      key={value.path + value.name}\r\n                      path={value.path}\r\n                      icon={value.icon}\r\n                      name={value.name}\r\n                      menuSelected={menuSelected}\r\n                      handleSelected={handleSelected}\r\n                      statusItem={value.statusItem}\r\n                      open={open}\r\n                    />\r\n                  ) : (\r\n                    <MenuSubItem\r\n                      key={value.path + value.name}\r\n                      path={value.path}\r\n                      icon={value.icon}\r\n                      name={value.name}\r\n                      menuSelected={menuSelected}\r\n                      handleSelected={handleSelected}\r\n                      open={open}\r\n                      parent={value.parent}\r\n                    />\r\n                  );\r\n                })}\r\n          </List>\r\n        </div>\r\n      )}\r\n      <Divider />\r\n      <List>\r\n        <Tooltip title=\"logout\" placement=\"right\">\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              history.push(\"/logout\");\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <PowerSettingsNewIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"logout\" />\r\n          </ListItem>\r\n        </Tooltip>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\n// Components\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MonetizationOnRoundedIcon from \"@material-ui/icons/MonetizationOnRounded\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport TransferDialog from \"./../Member/TransferDialog/TransferDialog\";\r\n\r\n//import Notification from \"./../Notification/Notification\";\r\nimport MenuItem from \"./Menu\";\r\n\r\n// History\r\nimport history from \"./../../../history\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    color: \"#424242\",\r\n    backgroundColor: \"#ffffff\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\"\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1\r\n    }\r\n  },\r\n  drawerColor: {\r\n    backgroundColor: \"#000\"\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar\r\n  },\r\n  content: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n  const { content, loginAuth, menuSelected, setMenuSelected } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [openTransfer, setOpenTransfer] = useState(false);\r\n\r\n  const handleTransferOpen = () => {\r\n    setOpenTransfer(true);\r\n  };\r\n  const handleTransferClose = () => {\r\n    setOpenTransfer(false);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleReward = () => {\r\n    setMenuSelected(\"reward\");\r\n    history.push(\"/reward\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loginAuth.isAuthenticated ? (\r\n        <div>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n              [classes.appBarShift]: open\r\n            })}\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, {\r\n                  [classes.hide]: open\r\n                })}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              {!open &&\r\n                (window.innerWidth > 400 && (\r\n                  <Typography variant=\"h6\" noWrap>\r\n                    Coin & Reward\r\n                  </Typography>\r\n                ))}\r\n              {(!open || window.innerWidth > 400) && (\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    right: \"15px\",\r\n                    fontSize: \"120%\"\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#ffecb3\",\r\n                      display: \"inline\",\r\n                      cursor: \"pointer\"\r\n                    }}\r\n                    className=\"shadow rounded border p-1\"\r\n                    onClick={handleReward}\r\n                  >\r\n                    <Tooltip title=\"Coin from people\">\r\n                      <FavoriteIcon color=\"secondary\" />\r\n                    </Tooltip>{\" \"}\r\n                    100 &nbsp;\r\n                    <Tooltip title=\"Coin from activity\">\r\n                      <MonetizationOnRoundedIcon className=\"colorCoin\" />\r\n                    </Tooltip>{\" \"}\r\n                    40\r\n                  </div>\r\n                  &nbsp;&nbsp;&nbsp;\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#ffecb3\",\r\n                      display: \"inline\",\r\n                      cursor: \"pointer\"\r\n                    }}\r\n                    className=\"shadow rounded border p-1\"\r\n                    onClick={handleTransferOpen}\r\n                  >\r\n                    <Tooltip title=\"Coin for transferring\">\r\n                      <AccountBalanceWalletIcon style={{ color: \"#00b0ff\" }} />\r\n                    </Tooltip>{\" \"}\r\n                    4\r\n                  </div>\r\n                  {/* <div style={{ display: \"inline\" }} className=\"px-2\">\r\n                    <Notification />\r\n                  </div> */}\r\n                </div>\r\n              )}\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open\r\n            })}\r\n            classes={{\r\n              paper: clsx({\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open\r\n              })\r\n            }}\r\n          >\r\n            <div className={classes.toolbar}>\r\n              <IconButton onClick={handleDrawerClose}>\r\n                {theme.direction === \"rtl\" ? (\r\n                  <ChevronRightIcon />\r\n                ) : (\r\n                    <ChevronLeftIcon />\r\n                  )}\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <MenuItem\r\n              loginAuth={loginAuth}\r\n              menuSelected={menuSelected}\r\n              setMenuSelected={setMenuSelected}\r\n            />\r\n          </Drawer>\r\n        </div>\r\n      ) : null}\r\n\r\n      {/* <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {content}\r\n      </main> */}\r\n\r\n      <div className=\"container-fluid\">\r\n        <div\r\n          className=\"row\"\r\n          style={{ paddingLeft: window.innerWidth < 720 ? \"55px\" : \"70px\" }}\r\n        >\r\n          <div className=\"col-12\">\r\n            <div className={classes.toolbar} />\r\n            {content}\r\n\r\n            <TransferDialog\r\n              open={openTransfer}\r\n              handleOpen={handleTransferOpen}\r\n              handleClose={handleTransferClose}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Form Validation\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// Components\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\n// Icons\r\nimport ToysIcon from \"@material-ui/icons/Toys\";\r\nimport ClassIcon from \"@material-ui/icons/Class\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\n\r\n// Backdrop and Notification\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\n// --------------\r\n// Main Function\r\nexport default function ItemDetail(props) {\r\n  const {\r\n    itemType,\r\n    id,\r\n    title,\r\n    image,\r\n    detail,\r\n    type,\r\n    place,\r\n    date,\r\n    amount,\r\n    price,\r\n    reward,\r\n    coin,\r\n    applyDate,\r\n    expiryDate,\r\n    netPrice,\r\n    handleNetPrice,\r\n    validateNetPrice,\r\n    onSubmit\r\n  } = props;\r\n\r\n  // Validators\r\n  const { register, errors, handleSubmit } = useForm();\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-center px-4\">\r\n          <div className=\"col-12 col-lg-8 shadow mb-3 bg-white rounded\">\r\n            {id ? (\r\n              <div>\r\n                <h3 className=\"text-center px-3 pt-4 pb-3\">{title}</h3>\r\n                <div className=\"row justify-content-center\">\r\n                  <div className=\"p-3 text-center\">\r\n                    <img\r\n                      src={\r\n                        itemType === \"reward\"\r\n                          ? `./../images/rewards/${image}`\r\n                          : `./../images/activities/${image}`\r\n                      }\r\n                      alt={image}\r\n                      width={window.innerWidth > 400 ? \"300\" : \"200\"}\r\n                      className=\"rounded border\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-10 col-lg-6 p-3\">\r\n                    {itemType === \"reward\" ? (\r\n                      <dl className=\"row\">\r\n                        <dt className=\"col-3\">Reward</dt>\r\n                        <dd className=\"col-9\">{title}</dd>\r\n                        <dt className=\"col-3\">Detail</dt>\r\n                        <dd className=\"col-9\">{detail}</dd>\r\n                        <dt className=\"col-3\">Type</dt>\r\n                        <dd className=\"col-9\">{type}</dd>\r\n                        <dt className=\"col-3\">Stock</dt>\r\n                        <dd className=\"col-9\">\r\n                          <StoreIcon className=\"colorDefault\" />\r\n                          {\" \" + amount + \" pcs.\"}\r\n                        </dd>\r\n                        <dt className=\"col-3\">Price</dt>\r\n                        <dd className=\"col-9\">\r\n                          {coin === \"heart\" ? (\r\n                            <FavoriteIcon color=\"secondary\" />\r\n                          ) : (\r\n                            <MonetizationOnIcon className=\"colorCoin\" />\r\n                          )}\r\n                          {\" \" + price + \" \" + coin + \"s\"}\r\n                        </dd>\r\n                        <dt className=\"col-3\">Expiry Date</dt>\r\n                        <dd className=\"col-9\">{expiryDate}</dd>\r\n                      </dl>\r\n                    ) : (\r\n                      <dl className=\"row\">\r\n                        <dt className=\"col-3\">Activity</dt>\r\n                        <dd className=\"col-9\">{title}</dd>\r\n                        <dt className=\"col-3\">Detail</dt>\r\n                        <dd className=\"col-9\">{detail}</dd>\r\n                        <dt className=\"col-3\">Place</dt>\r\n                        <dd className=\"col-9\">{place}</dd>\r\n                        <dt className=\"col-3\">Date</dt>\r\n                        <dd className=\"col-9\">\r\n                          <EventIcon className=\"colorDefault\" />\r\n                          {\" \" + date}\r\n                        </dd>\r\n                        <dt className=\"col-3\">Reward</dt>\r\n                        <dd className=\"col-9\">\r\n                          {coin === \"heart\" ? (\r\n                            <FavoriteIcon color=\"secondary\" />\r\n                          ) : (\r\n                            <MonetizationOnIcon className=\"colorCoin\" />\r\n                          )}\r\n                          {\" \" + reward + \" \" + coin + \"s\"}\r\n                        </dd>\r\n                        <dt className=\"col-3\">Apply Date</dt>\r\n                        <dd className=\"col-9\">{applyDate}</dd>\r\n                      </dl>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-10 col-lg-6 px-3\">\r\n                    {itemType === \"reward\" ? (\r\n                      <form>\r\n                        <div className=\"row justify-content-center\">\r\n                          <div className=\"col-4 px-3 pb-3\">\r\n                            <TextField\r\n                              type=\"number\"\r\n                              name=\"amount\"\r\n                              label=\"Amount\"\r\n                              value={netPrice.amount}\r\n                              InputProps={{\r\n                                readOnly: true\r\n                              }}\r\n                              inputRef={register({\r\n                                validate: validateNetPrice\r\n                              })}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-5 px-3 pb-3\">\r\n                            <TextField\r\n                              type=\"number\"\r\n                              name=\"netPrice\"\r\n                              label=\"Net Price\"\r\n                              value={netPrice.price}\r\n                              InputProps={{\r\n                                readOnly: true\r\n                              }}\r\n                              inputRef={register({\r\n                                validate: validateNetPrice\r\n                              })}\r\n                              error={!!errors.netPrice}\r\n                              helperText={\r\n                                errors.netPrice &&\r\n                                \"You're balance is not enough\"\r\n                              }\r\n                            />\r\n                          </div>\r\n                          <div className=\"w-100\" />\r\n                          <div className=\"col-9 pb-3\">\r\n                            <Slider\r\n                              name=\"sliderAmount\"\r\n                              defaultValue={1}\r\n                              step={1}\r\n                              min={1}\r\n                              max={\r\n                                parseInt(amount, 10) > 10\r\n                                  ? 10\r\n                                  : parseInt(amount, 10)\r\n                              }\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks\r\n                              onChange={handleNetPrice}\r\n                            />\r\n                          </div>\r\n                          <div className=\"w-100\" />\r\n                          <div className=\"col-12 px-3 pb-4 text-center\">\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"secondary\"\r\n                              endIcon={<ToysIcon />}\r\n                              className=\"m-auto\"\r\n                              onClick={handleSubmit(onSubmit)}\r\n                            >\r\n                              Redeem\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    ) : (\r\n                      <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 px-3 pb-4 text-center\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            endIcon={<ClassIcon />}\r\n                            className=\"m-auto\"\r\n                            onClick={handleSubmit(onSubmit)}\r\n                          >\r\n                            Apply\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={160}\r\n                  animation=\"wave\"\r\n                />\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={180}\r\n                  animation=\"wave\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Components\r\nimport ItemDetail from \"./../../ItemPlace/ItemDetail\";\r\n\r\nexport default function RewardDetail(props) {\r\n  const [item, setItem] = useState(null);\r\n\r\n  // Net Price\r\n  const [netPrice, setNetPrice] = useState({\r\n    amount: 1,\r\n    // price: item.price\r\n    price: 15\r\n  });\r\n\r\n  const handleNetPrice = (event, amount) => {\r\n    setNetPrice({\r\n      amount: amount,\r\n      price: amount * item.price\r\n    });\r\n  };\r\n  // end Net Price\r\n\r\n  // Validators\r\n  // const { register, errors, handleSubmit } = useForm();\r\n\r\n  const validateNetPrice = value => {\r\n    // return value <= wallet.balance[wallet.coinID.indexOf(coinID)]\r\n    //   ? true\r\n    //   : false;\r\n    return value <= 20 ? true : false;\r\n  };\r\n\r\n  const onSubmit = async data => {\r\n    if (window.confirm(\"Are you sure ?\")) {\r\n      // redeemReward(data)\r\n      console.log(data);\r\n    }\r\n  };\r\n  //end Validators\r\n\r\n  const queryReward = () => {\r\n    setItem({\r\n      itemType: \"reward\",\r\n      id: \"1\",\r\n      title: \"Dell 2A-3\",\r\n      image: \"computer.jpg\",\r\n      detail:\r\n        \"While Bootstrap uses ems or rems for defining most sizes, pxs are used for grid breakpoints and container\",\r\n      type: \"computer\",\r\n      price: \"50\",\r\n      coin: \"gold\",\r\n      amount: \"9\",\r\n      expiryDate: \"20-03-2021\"\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { id } = props.match.params;\r\n\r\n    setTimeout(() => {\r\n      queryReward();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  // Process handler\r\n  // const redeemReward = async data => {\r\n  //   //Update wallet\r\n  //   // setWallet({\r\n  //   //   ...wallet,\r\n  //   //   balance: wallet.balance.map((value, key) => {\r\n  //   //     return wallet.coinID.indexOf(coinID) === key\r\n  //   //       ? value - netPrice.price\r\n  //   //       : value;\r\n  //   //   })\r\n  //   // });\r\n\r\n  //   console.log(data);\r\n  // };\r\n  // end Process handler\r\n\r\n  return (\r\n    <div>\r\n      {item ? (\r\n        <ItemDetail\r\n          itemType={item.itemType}\r\n          id={item.id}\r\n          title={item.title}\r\n          image={item.image}\r\n          detail={item.detail}\r\n          type={item.type}\r\n          price={item.price}\r\n          coin={item.coin}\r\n          amount={item.amount}\r\n          expiryDate={item.expiryDate}\r\n          netPrice={netPrice}\r\n          handleNetPrice={handleNetPrice}\r\n          validateNetPrice={validateNetPrice}\r\n          onSubmit={onSubmit}\r\n        />\r\n      ) : (\r\n        <ItemDetail />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Components\r\nimport ItemDetail from \"./../../ItemPlace/ItemDetail\";\r\n\r\nexport default function ActivityDetail() {\r\n  const [item, setItem] = useState(null);\r\n\r\n  const onSubmit = async data => {\r\n    if (window.confirm(\"Are you sure ?\")) {\r\n      // redeemReward(data)\r\n      console.log(\"confirm\");\r\n    }\r\n  };\r\n  //end Validators\r\n\r\n  const queryActivity = () => {\r\n    setItem({\r\n      itemType: \"activity\",\r\n      id: \"1\",\r\n      title: \"Planting\",\r\n      image: \"planting.jpg\",\r\n      detail:\r\n        \"While Bootstrap uses ems or rems for defining most sizes, pxs are used for grid breakpoints and container\",\r\n      place: \"Rayong\",\r\n      date: \"20-04-2020\",\r\n      reward: \"15\",\r\n      coin: \"heart\",\r\n      applyDate: \"20/03/2020 - 15/04/2020\"\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryActivity();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {item ? (\r\n        <ItemDetail\r\n          itemType={item.itemType}\r\n          id={item.id}\r\n          title={item.title}\r\n          image={item.image}\r\n          detail={item.detail}\r\n          place={item.place}\r\n          date={item.date}\r\n          reward={item.reward}\r\n          coin={item.coin}\r\n          applyDate={item.applyDate}\r\n          onSubmit={onSubmit}\r\n        />\r\n      ) : (\r\n        <ItemDetail />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\n\r\n// Component\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst baseStyle = {\r\n  padding: \"70px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\"\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\"\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\"\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\"\r\n};\r\n\r\nexport default function DragDropImage({ setImage }) {\r\n  const {\r\n    acceptedFiles,\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({ accept: \"image/*\" });\r\n\r\n  acceptedFiles.map(file =>\r\n    setImage({\r\n      selectedFile: file,\r\n      imagePreviewUrl: URL.createObjectURL(file)\r\n    })\r\n  );\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {})\r\n    }),\r\n    [isDragActive, isDragReject]\r\n  );\r\n\r\n  return (\r\n    <div className=\"px-5\">\r\n      <div\r\n        className=\"img-fluid img-thumbnail\"\r\n        style={{ borderColor: \"#c4c4c4\" }}\r\n      >\r\n        <div {...getRootProps({ style })} className=\"p-4\">\r\n          <input {...getInputProps()} />\r\n          <p className=\"py-4\">\r\n            Drag 'n' drop image file here, or click to select files\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\n\r\n// Component\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\"\r\n  }\r\n}));\r\n\r\nconst ToggleBackdrop = forwardRef((props, ref) => {\r\n  const [backdrop, setBackdrop] = useState(false);\r\n\r\n  const toggleBackdrop = () => {\r\n    setBackdrop(!backdrop);\r\n  };\r\n\r\n  const sleep = milliseconds => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleBackdrop: toggleBackdrop,\r\n      sleep: sleep\r\n    };\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={backdrop}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n});\r\n\r\nexport default ToggleBackdrop;\r\n","import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\n\r\n// Validator\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// Components\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DragDropImage from \"./../../DragDropImage/DragDropImage\";\r\n\r\n// Icons\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport EmojiFoodBeverageIcon from \"@material-ui/icons/EmojiFoodBeverage\";\r\n\r\n// Backdrop and Notification\r\nimport ToggleBackdrop from \"./../../ToggleBackdrop/ToggleBackdrop\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nexport default function AddReward(props) {\r\n  // Backdrop and Notification\r\n  const ref = useRef(null);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [status, setStatus] = useState(false);\r\n  // end Backdrop and Notification\r\n\r\n  const [rewardType, setRewardType] = useState(null);\r\n\r\n  const [coinType, setCoinType] = useState(null);\r\n\r\n  // Props handler\r\n  const {\r\n    image,\r\n    name,\r\n    detail,\r\n    price,\r\n    coin,\r\n    amount,\r\n    type,\r\n    exp,\r\n    formType\r\n  } = props;\r\n\r\n  // Validater\r\n  const { register, errors, setValue, getValues, handleSubmit } = useForm();\r\n\r\n  const onSubmit = data => {\r\n    updateReward(data);\r\n  };\r\n  // end Validater\r\n\r\n  // Image previewer\r\n  const [state, setState] = useState({\r\n    selectedFile: image,\r\n    imagePreviewUrl: null\r\n  });\r\n\r\n  const fileChangedHandler = e => {\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      setState({\r\n        selectedFile: file,\r\n        imagePreviewUrl: reader.result\r\n      });\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setState({\r\n        selectedFile: null,\r\n        imagePreviewUrl: null\r\n      });\r\n    }\r\n  };\r\n\r\n  let imagePreview;\r\n  if (!state.selectedFile) {\r\n    imagePreview = (\r\n      <DragDropImage setImage={setState} />\r\n      // <span className=\"img-fluid img-thumbnail text-center\">\r\n      //   Please select an image\r\n      // </span>\r\n    );\r\n  } else {\r\n    imagePreview = (\r\n      <img\r\n        src={\r\n          state.imagePreviewUrl\r\n            ? state.imagePreviewUrl\r\n            : \"./../../../images/rewards/\" + state.selectedFile\r\n        }\r\n        width=\"250\"\r\n        alt=\"reward\"\r\n        className=\"img-fluid img-thumbnail\"\r\n      />\r\n    );\r\n\r\n    setValue(\"image\", state.selectedFile);\r\n  }\r\n  // end Image previewer\r\n\r\n  // Date Selector\r\n  const [selectedDate, handleDateChange] = useState(exp ? new Date(exp) : null);\r\n\r\n  // // Image file and Date Picker\r\n  useEffect(() => {\r\n    register({ name: \"image\" }, { required: true });\r\n    register({ name: \"exp\" }, { required: true });\r\n\r\n    if (selectedDate) {\r\n      setValue(\"exp\", selectedDate);\r\n    }\r\n\r\n    if (state.selectedFile) {\r\n      setValue(\"image\", state.selectedFile);\r\n    } else {\r\n      setValue(\"image\", null);\r\n    }\r\n  });\r\n  // end Image file\r\n\r\n  // Process handler\r\n  const updateReward = async data => {\r\n    // Toggle Backdrop\r\n    ref.current.toggleBackdrop();\r\n    // Process\r\n    await ref.current.sleep(2000);\r\n    console.log(data);\r\n    setStatus(!status);\r\n    // Toggle Backdrop and show notification\r\n    ref.current.toggleBackdrop();\r\n    if (status) {\r\n      enqueueSnackbar(\"Update successful\", {\r\n        variant: \"success\"\r\n      });\r\n    } else {\r\n      enqueueSnackbar(\"Something went wrong!\", {\r\n        variant: \"error\"\r\n      });\r\n    }\r\n  };\r\n  // end Process handler\r\n\r\n  const queryRewardType = () => {\r\n    setRewardType([\"Computer\", \"Phone\", \"Ticket\"]);\r\n  };\r\n\r\n  const queryCoinType = () => {\r\n    setCoinType([\"Gold\", \"Heart\"]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryRewardType();\r\n      queryCoinType();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-xl-6 col-md-10\">\r\n            {rewardType && coinType ? (\r\n              <div className=\"card colorItem\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    <EmojiFoodBeverageIcon\r\n                      className=\"colorDefault2\"\r\n                      fontSize=\"large\"\r\n                    />{\" \"}\r\n                    &nbsp;Reward\r\n                  </h5>\r\n                  <h6 className=\"card-subtitle text-muted\">\r\n                    Reward's detail :\r\n                  </h6>\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"row justify-content-center\">\r\n                      <div className=\"col-12 pt-4 text-center px-2\">\r\n                        {imagePreview}\r\n                        <input\r\n                          type=\"file\"\r\n                          id=\"image\"\r\n                          name=\"image\"\r\n                          accept=\"image/*\"\r\n                          className=\"hideInput\"\r\n                          onChange={fileChangedHandler}\r\n                        />\r\n\r\n                        {state.selectedFile ? (\r\n                          <label htmlFor=\"image\">\r\n                            <IconButton component=\"span\">\r\n                              <PhotoCamera fontFamily=\"large\" />\r\n                            </IconButton>\r\n                          </label>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"col-12 pt-3 px-3\">\r\n                        <TextField\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          label=\"Name\"\r\n                          defaultValue={name}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          inputRef={register({ required: true, maxLength: 50 })}\r\n                          error={!!errors.name}\r\n                          helperText={\r\n                            errors.name &&\r\n                            ((errors.name.type === \"required\" &&\r\n                              \"Please fill name of reward\") ||\r\n                              (errors.name.type === \"maxLength\" &&\r\n                                \"Please fill name less than 50 characters\"))\r\n                          }\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-12 pt-3 px-3\">\r\n                        <TextField\r\n                          type=\"text\"\r\n                          name=\"detail\"\r\n                          label=\"Detail\"\r\n                          defaultValue={detail}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          inputRef={register({\r\n                            required: true,\r\n                            maxLength: 100\r\n                          })}\r\n                          error={!!errors.detail}\r\n                          helperText={\r\n                            errors.detail &&\r\n                            ((errors.detail.type === \"required\" &&\r\n                              \"Please fill detail of reward\") ||\r\n                              (errors.detail.type === \"maxLength\" &&\r\n                                \"Please fill detail less than 100 characters\"))\r\n                          }\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-12 col-md-9 pt-3 pl-3\">\r\n                        <TextField\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          label=\"Price\"\r\n                          defaultValue={price}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          inputRef={register({ required: true, min: 0 })}\r\n                          error={!!errors.price}\r\n                          helperText={\r\n                            errors.price &&\r\n                            ((errors.price.type === \"required\" &&\r\n                              \"Please fill price of reward\") ||\r\n                              (errors.price.type === \"min\" &&\r\n                                \"Please fill price more than 0\"))\r\n                          }\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-12 col-md-3 pt-3 pr-3\">\r\n                        <Autocomplete\r\n                          options={coinType}\r\n                          getOptionLabel={option => option}\r\n                          renderInput={params => (\r\n                            <TextField\r\n                              {...params}\r\n                              name=\"coinType\"\r\n                              label=\"Coin\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              inputRef={register({ required: true })}\r\n                              error={!!errors.coinType}\r\n                              helperText={\r\n                                errors.coinType &&\r\n                                (errors.coinType.type === \"required\" &&\r\n                                  \"Please select type\")\r\n                              }\r\n                            />\r\n                          )}\r\n                          defaultValue={coin}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-7 col-md-9 pt-3 pl-3\">\r\n                        <TextField\r\n                          type=\"number\"\r\n                          name=\"amount\"\r\n                          label=\"Amount\"\r\n                          defaultValue={amount}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          inputRef={register({ required: true, min: 0 })}\r\n                          error={!!errors.amount}\r\n                          helperText={\r\n                            errors.amount &&\r\n                            ((errors.amount.type === \"required\" &&\r\n                              \"Please fill amount\") ||\r\n                              (errors.amount.type === \"min\" &&\r\n                                \"Please fill amount more than 0\"))\r\n                          }\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-5 col-md-3 pt-4 pr-3\">\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            setValue(\r\n                              \"amount\",\r\n                              getValues().amount\r\n                                ? parseInt(getValues().amount, 10)\r\n                                  ? parseInt(getValues().amount, 10) - 1\r\n                                  : 0\r\n                                : null\r\n                            );\r\n                          }}\r\n                        >\r\n                          <RemoveIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            setValue(\r\n                              \"amount\",\r\n                              getValues().amount\r\n                                ? parseInt(getValues().amount, 10) + 1\r\n                                : null\r\n                            );\r\n                          }}\r\n                        >\r\n                          <AddIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </div>\r\n\r\n                      <div className=\"col-12 pt-3 px-3\">\r\n                        <Autocomplete\r\n                          options={rewardType}\r\n                          getOptionLabel={option => option}\r\n                          renderInput={params => (\r\n                            <TextField\r\n                              {...params}\r\n                              name=\"rewardType\"\r\n                              label=\"Type\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              inputRef={register({ required: true })}\r\n                              error={!!errors.rewardType}\r\n                              helperText={\r\n                                errors.rewardType &&\r\n                                (errors.rewardType.type === \"required\" &&\r\n                                  \"Please select type\")\r\n                              }\r\n                            />\r\n                          )}\r\n                          defaultValue={type}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-md-12 pt-3 px-3\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <DatePicker\r\n                            name=\"exp\"\r\n                            label=\"Expiry Date\"\r\n                            inputVariant=\"outlined\"\r\n                            disablePast\r\n                            autoOk\r\n                            fullWidth\r\n                            format=\"dd-MM-yyyy\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            error={!!errors.exp}\r\n                            helperText={\r\n                              errors.exp &&\r\n                              (errors.exp.type === \"required\" &&\r\n                                \"Please select expiry date\")\r\n                            }\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n\r\n                      {!!errors.image ? (\r\n                        <div className=\"col-md-12 pt-3 text-center\">\r\n                          <span className=\"text-danger\">\r\n                            Please select an image\r\n                          </span>\r\n                        </div>\r\n                      ) : null}\r\n                      <div className=\"col-md-12 pt-4 text-center\">\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          startIcon={<SaveIcon />}\r\n                        >\r\n                          {formType === \"add\" ? \"Add\" : \"Update\"} reward\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={50}\r\n                  animation=\"wave\"\r\n                />\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={100}\r\n                  animation=\"wave\"\r\n                />\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={500}\r\n                  animation=\"wave\"\r\n                />\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <ToggleBackdrop ref={ref} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\n// Components\r\nimport RewardForm from \"./RewardForm\";\r\n\r\nexport default function AddReward(props) {\r\n  const { id } = props.match.params;\r\n\r\n  // Useful States\r\n  const [add, setAdd] = useState(id ? false : true);\r\n\r\n  const [oldValue, setOldValue] = useState([\r\n    \"ticket.jpg\",\r\n    \"Major\",\r\n    \"Major's detail\",\r\n    123,\r\n    \"Gold\",\r\n    9,\r\n    \"Ticket\",\r\n    \"2020-07-31\"\r\n  ]);\r\n\r\n  const [state, setState] = useState({\r\n    image: add ? null : oldValue[0],\r\n    name: add ? null : oldValue[1],\r\n    detail: add ? null : oldValue[2],\r\n    price: add ? null : oldValue[3],\r\n    coin: add ? null : oldValue[4],\r\n    amount: add ? null : oldValue[5],\r\n    type: add ? null : oldValue[6],\r\n    exp: add ? null : oldValue[7],\r\n    formType: add ? \"add\" : \"update\"\r\n  });\r\n  // end Useful States\r\n\r\n  return (\r\n    <div>\r\n      <RewardForm\r\n        image={state.image}\r\n        name={state.name}\r\n        detail={state.detail}\r\n        price={state.price}\r\n        coin={state.coin}\r\n        amount={state.amount}\r\n        type={state.type}\r\n        exp={state.exp}\r\n        formType={state.formType}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\n// Validator\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// Components\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DragDropImage from \"./../../DragDropImage/DragDropImage\";\r\n\r\n// Icons\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport NaturePeopleIcon from \"@material-ui/icons/NaturePeople\";\r\n\r\n// Backdrop and Notification\r\nimport ToggleBackdrop from \"./../../ToggleBackdrop/ToggleBackdrop\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nexport default function AddReward(props) {\r\n  // Backdrop and Notification\r\n  const ref = useRef(null);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [status, setStatus] = useState(false);\r\n  // end Backdrop and Notification\r\n\r\n  const [coinType, setCoinType] = useState(null);\r\n\r\n  // Props handler\r\n  const {\r\n    image,\r\n    name,\r\n    detail,\r\n    place,\r\n    date,\r\n    reward,\r\n    coin,\r\n    enrollStartDate,\r\n    enrollEndDate,\r\n    formType\r\n  } = props;\r\n\r\n  // Validater\r\n  const { register, errors, setValue, handleSubmit } = useForm();\r\n\r\n  const onSubmit = data => {\r\n    updateActivity(data);\r\n  };\r\n  // end Validater\r\n\r\n  // Image previewer\r\n  const [state, setState] = useState({\r\n    selectedFile: image,\r\n    imagePreviewUrl: null\r\n  });\r\n\r\n  const fileChangedHandler = e => {\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      setState({\r\n        selectedFile: file,\r\n        imagePreviewUrl: reader.result\r\n      });\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setState({\r\n        selectedFile: null,\r\n        imagePreviewUrl: null\r\n      });\r\n    }\r\n  };\r\n\r\n  let imagePreview;\r\n  if (!state.selectedFile) {\r\n    imagePreview = (\r\n      // <span className=\"img-fluid img-thumbnail text-center\">\r\n      //   Please select an image\r\n      // </span>\r\n      <DragDropImage setImage={setState} />\r\n    );\r\n  } else {\r\n    imagePreview = (\r\n      <img\r\n        src={\r\n          state.imagePreviewUrl\r\n            ? state.imagePreviewUrl\r\n            : \"./../../../images/activities/\" + state.selectedFile\r\n        }\r\n        width=\"250\"\r\n        alt=\"reward\"\r\n        className=\"img-fluid img-thumbnail\"\r\n      />\r\n    );\r\n\r\n    setValue(\"image\", state.selectedFile);\r\n  }\r\n  // end Image previewer\r\n\r\n  // Date Selector\r\n  const [selectedDate, handleDateChange] = useState(\r\n    date ? new Date(date) : null\r\n  );\r\n  const [selectedEnrollStartDate, handleEnrollStartDateChange] = useState(\r\n    enrollStartDate ? new Date(enrollStartDate) : null\r\n  );\r\n  const [selectedEnrollEndDate, handleEnrollEndDateChange] = useState(\r\n    enrollEndDate ? new Date(enrollEndDate) : null\r\n  );\r\n\r\n  // // Image file and Date Picker\r\n  useEffect(() => {\r\n    register({ name: \"image\" }, { required: true });\r\n    register({ name: \"date\" }, { required: true });\r\n    register({ name: \"enrollStartDate\" }, { required: true });\r\n    register({ name: \"enrollEndDate\" }, { required: true });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedDate) {\r\n      setValue(\"date\", selectedDate);\r\n    }\r\n    if (selectedEnrollStartDate) {\r\n      setValue(\"enrollStartDate\", selectedEnrollStartDate);\r\n    }\r\n    if (selectedEnrollEndDate) {\r\n      setValue(\"enrollEndDate\", selectedEnrollEndDate);\r\n    }\r\n\r\n    if (state.selectedFile) {\r\n      setValue(\"image\", state.selectedFile);\r\n    } else {\r\n      setValue(\"image\", null);\r\n    }\r\n  });\r\n  // end Image file\r\n\r\n  // Process handler\r\n  const updateActivity = async data => {\r\n    // Toggle Backdrop\r\n    ref.current.toggleBackdrop();\r\n    // Process\r\n    await ref.current.sleep(2000);\r\n    console.log(data);\r\n    setStatus(!status);\r\n    // Toggle Backdrop and show notification\r\n    ref.current.toggleBackdrop();\r\n    if (status) {\r\n      enqueueSnackbar(\"Update successful\", {\r\n        variant: \"success\"\r\n      });\r\n    } else {\r\n      enqueueSnackbar(\"Something went wrong!\", {\r\n        variant: \"error\"\r\n      });\r\n    }\r\n  };\r\n  // end Process handler\r\n\r\n  const queryCoinType = () => {\r\n    setCoinType([\"Gold\", \"Heart\"]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryCoinType();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-xl-6 col-md-10\">\r\n            {coinType ? (\r\n              <div className=\"card colorItem\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    <NaturePeopleIcon\r\n                      className=\"colorDefault2\"\r\n                      fontSize=\"large\"\r\n                    />{\" \"}\r\n                    &nbsp;Activity\r\n                  </h5>\r\n                  <h6 className=\"card-subtitle text-muted\">\r\n                    Activity's detail :\r\n                  </h6>\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"row justify-content-center\">\r\n                      <div className=\"col-12 pt-4 text-center px-2\">\r\n                        {imagePreview}\r\n                        <input\r\n                          type=\"file\"\r\n                          id=\"image\"\r\n                          name=\"image\"\r\n                          accept=\"image/*\"\r\n                          className=\"hideInput\"\r\n                          onChange={fileChangedHandler}\r\n                        />\r\n                        {state.selectedFile ? (\r\n                          <label htmlFor=\"image\">\r\n                            <IconButton component=\"span\">\r\n                              <PhotoCamera fontFamily=\"large\" />\r\n                            </IconButton>\r\n                          </label>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"col-12 pt-3 px-3\">\r\n                        <TextField\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          label=\"Name\"\r\n                          defaultValue={name}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          inputRef={register({ required: true, maxLength: 50 })}\r\n                          error={!!errors.name}\r\n                          helperText={\r\n                            errors.name &&\r\n                            ((errors.name.type === \"required\" &&\r\n                              \"Please fill name of reward\") ||\r\n                              (errors.name.type === \"maxLength\" &&\r\n                                \"Please fill name less than 50 characters\"))\r\n                          }\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-12 pt-3 px-3\">\r\n                        <TextField\r\n                          type=\"text\"\r\n                          name=\"detail\"\r\n                          label=\"Detail\"\r\n                          defaultValue={detail}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          inputRef={register({\r\n                            required: true,\r\n                            maxLength: 100\r\n                          })}\r\n                          error={!!errors.detail}\r\n                          helperText={\r\n                            errors.detail &&\r\n                            ((errors.detail.type === \"required\" &&\r\n                              \"Please fill detail of reward\") ||\r\n                              (errors.detail.type === \"maxLength\" &&\r\n                                \"Please fill detail less than 100 characters\"))\r\n                          }\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-12 pt-3 px-3\">\r\n                        <TextField\r\n                          type=\"text\"\r\n                          name=\"place\"\r\n                          label=\"Place\"\r\n                          defaultValue={place}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          inputRef={register({ required: true, min: 0 })}\r\n                          error={!!errors.place}\r\n                          helperText={\r\n                            errors.place &&\r\n                            ((errors.place.type === \"required\" &&\r\n                              \"Please fill place of reward\") ||\r\n                              (errors.place.type === \"min\" &&\r\n                                \"Please fill place more than 0\"))\r\n                          }\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-12 pt-3 px-3\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <DatePicker\r\n                            name=\"date\"\r\n                            label=\"Date\"\r\n                            inputVariant=\"outlined\"\r\n                            disablePast\r\n                            autoOk\r\n                            fullWidth\r\n                            format=\"dd-MM-yyyy\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            error={!!errors.date}\r\n                            helperText={\r\n                              errors.date &&\r\n                              (errors.date.type === \"required\" &&\r\n                                \"Please select date\")\r\n                            }\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n\r\n                      <div className=\"col-12 col-md-9 pt-3 pl-3\">\r\n                        <TextField\r\n                          type=\"number\"\r\n                          name=\"reward\"\r\n                          label=\"Reward\"\r\n                          defaultValue={reward}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          inputRef={register({ required: true, min: 0 })}\r\n                          error={!!errors.reward}\r\n                          helperText={\r\n                            errors.reward &&\r\n                            ((errors.reward.type === \"required\" &&\r\n                              \"Please fill reward of reward\") ||\r\n                              (errors.reward.type === \"min\" &&\r\n                                \"Please fill reward more than 0\"))\r\n                          }\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-12 col-md-3 pt-3 pr-3\">\r\n                        <Autocomplete\r\n                          options={coinType}\r\n                          getOptionLabel={option => option}\r\n                          renderInput={params => (\r\n                            <TextField\r\n                              {...params}\r\n                              name=\"coinType\"\r\n                              label=\"Coin\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              inputRef={register({ required: true })}\r\n                              error={!!errors.coinType}\r\n                              helperText={\r\n                                errors.coinType &&\r\n                                (errors.coinType.type === \"required\" &&\r\n                                  \"Please select type\")\r\n                              }\r\n                            />\r\n                          )}\r\n                          defaultValue={coin}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-12 col-md-6 pt-3 px-3\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <DatePicker\r\n                            name=\"enrollStartDate\"\r\n                            label=\"Enroll Start Date\"\r\n                            inputVariant=\"outlined\"\r\n                            fullWidth\r\n                            disablePast\r\n                            maxDate={selectedDate ? selectedDate : null}\r\n                            autoOk\r\n                            format=\"dd-MM-yyyy\"\r\n                            value={selectedEnrollStartDate}\r\n                            onChange={handleEnrollStartDateChange}\r\n                            error={!!errors.enrollStartDate}\r\n                            helperText={\r\n                              errors.enrollStartDate &&\r\n                              (errors.enrollStartDate.type === \"required\" &&\r\n                                \"Please select enroll start date\")\r\n                            }\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n                      <div className=\"col-12 col-md-6 pt-3 px-3\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <DatePicker\r\n                            name=\"enrollEndDate\"\r\n                            label=\"Enroll End Date\"\r\n                            inputVariant=\"outlined\"\r\n                            fullWidth\r\n                            minDate={\r\n                              selectedEnrollStartDate\r\n                                ? selectedEnrollStartDate\r\n                                : null\r\n                            }\r\n                            maxDate={selectedDate ? selectedDate : null}\r\n                            autoOk\r\n                            format=\"dd-MM-yyyy\"\r\n                            value={selectedEnrollEndDate}\r\n                            onChange={handleEnrollEndDateChange}\r\n                            error={!!errors.enrollEndDate}\r\n                            helperText={\r\n                              errors.enrollEndDate &&\r\n                              (errors.enrollEndDate.type === \"required\" &&\r\n                                \"Please select enroll end date\")\r\n                            }\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </div>\r\n\r\n                      {!!errors.image ? (\r\n                        <div className=\"col-md-12 pt-3 text-center\">\r\n                          <span className=\"text-danger\">\r\n                            Please select an image\r\n                          </span>\r\n                        </div>\r\n                      ) : null}\r\n                      <div className=\"col-md-12 pt-4 text-center\">\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          startIcon={<SaveIcon />}\r\n                        >\r\n                          {formType === \"add\" ? \"Add\" : \"Update\"} activity\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={50}\r\n                  animation=\"wave\"\r\n                />\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={100}\r\n                  animation=\"wave\"\r\n                />\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={500}\r\n                  animation=\"wave\"\r\n                />\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <ToggleBackdrop ref={ref} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\n// Components\r\nimport ActivityForm from \"./ActivityForm\";\r\n\r\nexport default function AddReward(props) {\r\n  const { id } = props.match.params;\r\n\r\n  // Useful States\r\n  const [add, setAdd] = useState(id ? false : true);\r\n\r\n  const [oldValue, setOldValue] = useState([\r\n    \"planting.jpg\",\r\n    \"Planting\",\r\n    \"Planting's detail\",\r\n    \"Rayong\",\r\n    \"2020-03-28\",\r\n    20,\r\n    \"Heart\",\r\n    \"2020-03-10\",\r\n    \"2020-03-25\"\r\n  ]);\r\n\r\n  const [state, setState] = useState({\r\n    image: add ? null : oldValue[0],\r\n    name: add ? null : oldValue[1],\r\n    detail: add ? null : oldValue[2],\r\n    place: add ? null : oldValue[3],\r\n    date: add ? null : oldValue[4],\r\n    reward: add ? null : oldValue[5],\r\n    coin: add ? null : oldValue[6],\r\n    enrollStartDate: add ? null : oldValue[7],\r\n    enrollEndDate: add ? null : oldValue[8],\r\n    formType: add ? \"add\" : \"update\"\r\n  });\r\n  // end Useful States\r\n\r\n  return (\r\n    <div>\r\n      <ActivityForm\r\n        image={state.image}\r\n        name={state.name}\r\n        detail={state.detail}\r\n        place={state.place}\r\n        date={state.date}\r\n        reward={state.reward}\r\n        coin={state.coin}\r\n        enrollStartDate={state.enrollStartDate}\r\n        enrollEndDate={state.enrollEndDate}\r\n        formType={state.formType}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport MaterialTable from \"material-table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\n// Backdrop and Notification\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst TableTitle = ({ icon, title }) => {\r\n  return (\r\n    <h5 className=\"pt-2\">\r\n      {icon} &nbsp;{title}\r\n    </h5>\r\n  );\r\n};\r\n\r\nexport const TransactionTable = props => {\r\n  const { icon, title, transaction, showDetail, error } = props;\r\n\r\n  return (\r\n    <div>\r\n      {transaction ? (\r\n        <div>\r\n          {window.innerWidth < 720 && (\r\n            <div className=\"col-12 pt-2 h5\">\r\n              {icon} &nbsp;{title}\r\n            </div>\r\n          )}\r\n          <TableContainer component={Card} className=\"colorItem\">\r\n            <MaterialTable\r\n              title={\r\n                window.innerWidth > 720 ? (\r\n                  <TableTitle icon={icon} title={title} />\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              }\r\n              columns={transaction.columns}\r\n              data={transaction.data}\r\n              detailPanel={\r\n                showDetail\r\n                  ? [\r\n                      {\r\n                        tooltip: \"Detail\",\r\n                        render: rowData => {\r\n                          return (\r\n                            <div className=\"p-2 text-center\">\r\n                              {rowData.detail}\r\n                            </div>\r\n                          );\r\n                        }\r\n                      }\r\n                    ]\r\n                  : null\r\n              }\r\n              onRowClick={\r\n                showDetail\r\n                  ? (event, rowData, togglePanel) => togglePanel()\r\n                  : null\r\n              }\r\n              options={{\r\n                headerStyle: {\r\n                  backgroundColor: \"#f1f3f4\",\r\n                  fontSize: \"105%\",\r\n                  textAlign: \"center\"\r\n                },\r\n                cellStyle: {\r\n                  textAlign: \"center\"\r\n                },\r\n                pageSizeOptions: window.innerWidth > 1024 ? [5, 10, 20] : [5]\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: error\r\n                }\r\n              }}\r\n            />\r\n          </TableContainer>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Skeleton width=\"100%\" animation=\"wave\" />\r\n          <Skeleton variant=\"rect\" width=\"100%\" height={50} animation=\"wave\" />\r\n          <Skeleton width=\"100%\" animation=\"wave\" />\r\n          <Skeleton variant=\"rect\" width=\"100%\" height={350} animation=\"wave\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TransactionManagerTable = props => {\r\n  // Props handler\r\n  const {\r\n    icon,\r\n    title,\r\n    transaction,\r\n    handleApprove,\r\n    handleReject,\r\n    showDetail,\r\n    error\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      {transaction ? (\r\n        <div>\r\n          {window.innerWidth < 720 && (\r\n            <div className=\"col-12 pt-2 h5\">\r\n              {icon} &nbsp;{title}\r\n            </div>\r\n          )}\r\n          <TableContainer component={Card} className=\"colorItem\">\r\n            <MaterialTable\r\n              title={\r\n                window.innerWidth > 720 ? (\r\n                  <TableTitle icon={icon} title={title} />\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              }\r\n              columns={transaction.columns}\r\n              data={transaction.data}\r\n              detailPanel={\r\n                showDetail\r\n                  ? [\r\n                      {\r\n                        tooltip: \"Detail\",\r\n                        render: rowData => {\r\n                          return (\r\n                            <div className=\"p-2 text-center\">\r\n                              {rowData.detail}\r\n                            </div>\r\n                          );\r\n                        }\r\n                      }\r\n                    ]\r\n                  : null\r\n              }\r\n              onRowClick={\r\n                showDetail\r\n                  ? (event, rowData, togglePanel) => togglePanel()\r\n                  : null\r\n              }\r\n              actions={[\r\n                {\r\n                  icon: \"check\",\r\n                  tooltip: \"Approve\",\r\n                  onClick: handleApprove\r\n                },\r\n                {\r\n                  icon: \"clear\",\r\n                  tooltip: \"Reject\",\r\n                  onClick: handleReject\r\n                }\r\n              ]}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                headerStyle: {\r\n                  backgroundColor: \"#f1f3f4\",\r\n                  fontSize: \"105%\",\r\n                  textAlign: \"center\"\r\n                },\r\n                cellStyle: {\r\n                  textAlign: \"center\"\r\n                },\r\n                pageSizeOptions: window.innerWidth > 1024 ? [5, 10, 20] : [5]\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: error\r\n                }\r\n              }}\r\n            />\r\n          </TableContainer>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Skeleton width=\"100%\" animation=\"wave\" />\r\n          <Skeleton variant=\"rect\" width=\"100%\" height={50} animation=\"wave\" />\r\n          <Skeleton width=\"100%\" animation=\"wave\" />\r\n          <Skeleton variant=\"rect\" width=\"100%\" height={350} animation=\"wave\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ActivityPendingTable = props => {\r\n  // Props handler\r\n  const { icon, title, transaction, handleReject, showDetail, error } = props;\r\n\r\n  return (\r\n    <div>\r\n      {transaction ? (\r\n        <div>\r\n          {window.innerWidth < 720 && (\r\n            <div className=\"col-12 pt-2 h5\">\r\n              {icon} &nbsp;{title}\r\n            </div>\r\n          )}\r\n          <TableContainer component={Card} className=\"colorItem\">\r\n            <MaterialTable\r\n              title={\r\n                window.innerWidth > 720 ? (\r\n                  <TableTitle icon={icon} title={title} />\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              }\r\n              columns={transaction.columns}\r\n              data={transaction.data}\r\n              detailPanel={\r\n                showDetail\r\n                  ? [\r\n                      {\r\n                        tooltip: \"Detail\",\r\n                        render: rowData => {\r\n                          return (\r\n                            <div className=\"p-2 text-center\">\r\n                              {rowData.detail}\r\n                            </div>\r\n                          );\r\n                        }\r\n                      }\r\n                    ]\r\n                  : null\r\n              }\r\n              onRowClick={\r\n                showDetail\r\n                  ? (event, rowData, togglePanel) => togglePanel()\r\n                  : null\r\n              }\r\n              actions={[\r\n                {\r\n                  icon: \"clear\",\r\n                  tooltip: \"Remove\",\r\n                  onClick: handleReject\r\n                }\r\n              ]}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                headerStyle: {\r\n                  backgroundColor: \"#f1f3f4\",\r\n                  fontSize: \"105%\",\r\n                  textAlign: \"center\"\r\n                },\r\n                cellStyle: {\r\n                  textAlign: \"center\"\r\n                },\r\n                pageSizeOptions: window.innerWidth > 1024 ? [5, 10, 20] : [5]\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: error\r\n                }\r\n              }}\r\n            />\r\n          </TableContainer>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Skeleton width=\"100%\" animation=\"wave\" />\r\n          <Skeleton variant=\"rect\" width=\"100%\" height={50} animation=\"wave\" />\r\n          <Skeleton width=\"100%\" animation=\"wave\" />\r\n          <Skeleton variant=\"rect\" width=\"100%\" height={350} animation=\"wave\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ActivitySuccessTable = props => {\r\n  // Props handler\r\n  const { icon, title, transaction, handleApprove, showDetail, error } = props;\r\n\r\n  return (\r\n    <div>\r\n      {transaction ? (\r\n        <div>\r\n          {window.innerWidth < 720 && (\r\n            <div className=\"col-12 pt-2 h5\">\r\n              {icon} &nbsp;{title}\r\n            </div>\r\n          )}\r\n          <TableContainer component={Card} className=\"colorItem\">\r\n            <MaterialTable\r\n              title={\r\n                window.innerWidth > 720 ? (\r\n                  <TableTitle icon={icon} title={title} />\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              }\r\n              columns={transaction.columns}\r\n              data={transaction.data}\r\n              detailPanel={\r\n                showDetail\r\n                  ? [\r\n                      {\r\n                        tooltip: \"Detail\",\r\n                        render: rowData => {\r\n                          return (\r\n                            <div className=\"p-2 text-center\">\r\n                              {rowData.detail}\r\n                            </div>\r\n                          );\r\n                        }\r\n                      }\r\n                    ]\r\n                  : null\r\n              }\r\n              onRowClick={\r\n                showDetail\r\n                  ? (event, rowData, togglePanel) => togglePanel()\r\n                  : null\r\n              }\r\n              actions={[\r\n                {\r\n                  icon: \"check\",\r\n                  tooltip: \"Approve\",\r\n                  onClick: handleApprove\r\n                }\r\n              ]}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                headerStyle: {\r\n                  backgroundColor: \"#f1f3f4\",\r\n                  fontSize: \"105%\",\r\n                  textAlign: \"center\"\r\n                },\r\n                cellStyle: {\r\n                  textAlign: \"center\"\r\n                },\r\n                selection: true,\r\n                pageSizeOptions: window.innerWidth > 1024 ? [5, 10, 20] : [5]\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: error\r\n                }\r\n              }}\r\n            />\r\n          </TableContainer>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Skeleton width=\"100%\" animation=\"wave\" />\r\n          <Skeleton variant=\"rect\" width=\"100%\" height={50} animation=\"wave\" />\r\n          <Skeleton width=\"100%\" animation=\"wave\" />\r\n          <Skeleton variant=\"rect\" width=\"100%\" height={350} animation=\"wave\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nexport default function ExportApplicant({ id, activity, applicant, icon }) {\r\n  const [data, setData] = useState(null);\r\n\r\n  const queryData = () => {\r\n    setData([\r\n      {\r\n        columns: [\r\n          { title: \"Name\", width: { wch: 25 } },\r\n          { title: \"Apply Date\", width: { wch: 14 } },\r\n          { title: \"Status\", width: { wch: 14 } }\r\n        ],\r\n        data: [\r\n          [\r\n            { value: \"Wirasut Wannasiri\" },\r\n            { value: \"22/20/2020\" },\r\n            { value: \"joined\" }\r\n          ],\r\n          [\r\n            { value: \"Wirasut Wannasiri\" },\r\n            { value: \"22/20/2020\" },\r\n            { value: \"not joined\" }\r\n          ],\r\n          [\r\n            { value: \"Wirasut Wannasiri\" },\r\n            { value: \"22/20/2020\" },\r\n            { value: \"joined\" }\r\n          ],\r\n          [\r\n            { value: \"Wirasut Wannasiri\" },\r\n            { value: \"22/20/2020\" },\r\n            { value: \"joined\" }\r\n          ],\r\n          [\r\n            { value: \"Wirasut Wannasiri\" },\r\n            { value: \"22/20/2020\" },\r\n            { value: \"joined\" }\r\n          ],\r\n          [\r\n            { value: \"Wirasut Wannasiri\" },\r\n            { value: \"22/20/2020\" },\r\n            { value: \"joined\" }\r\n          ],\r\n          [\r\n            { value: \"Wirasut Wannasiri\" },\r\n            { value: \"22/20/2020\" },\r\n            { value: \"joined\" }\r\n          ],\r\n          [\r\n            { value: \"Wirasut Wannasiri\" },\r\n            { value: \"22/20/2020\" },\r\n            { value: \"joined\" }\r\n          ],\r\n          [\r\n            { value: \"Wirasut Wannasiri\" },\r\n            { value: \"22/20/2020\" },\r\n            { value: \"joined\" }\r\n          ],\r\n          []\r\n        ]\r\n      }\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    queryData();\r\n  }, []);\r\n\r\n  return data ? (\r\n    <ExcelFile filename={activity} element={icon}>\r\n      <ExcelSheet dataSet={data} name={activity} />\r\n    </ExcelFile>\r\n  ) : null;\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\n// Form Validator\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// Components\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  ActivityPendingTable,\r\n  ActivitySuccessTable\r\n} from \"./../../TransactionTable/TransactionTable\";\r\nimport ExportApplicant from \"./ExportApplicant\";\r\n\r\n// Icons\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\n// Backdrop and Notification\r\nimport ToggleBackdrop from \"./../../ToggleBackdrop/ToggleBackdrop\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\n// --------------\r\n// Main Function\r\nexport default function ApplicantManager(props) {\r\n  const { id } = props.match.params;\r\n\r\n  // Backdrop and Notification\r\n  const ref = useRef(null);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [status, setStatus] = useState(false);\r\n  // end Backdrop and Notification\r\n\r\n  // Validator\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const onSubmit = data => {\r\n    if (window.confirm(\"Are you sure ?\")) {\r\n      handleAddApplicant(data);\r\n    }\r\n  };\r\n  // end Validator\r\n\r\n  // Useful States\r\n  const [activity, setActivity] = useState(null);\r\n\r\n  const [activityPending, setActivityPending] = useState(true);\r\n\r\n  const [applicantList, setApplicantList] = useState(null);\r\n\r\n  const [applicant, setApplicant] = useState(null);\r\n  // end Useful States\r\n\r\n  // Process handler\r\n  const handleAddApplicant = async data => {\r\n    // Toggle Backdrop\r\n    ref.current.toggleBackdrop();\r\n    // Process\r\n    await ref.current.sleep(2000);\r\n    console.log(data);\r\n    setStatus(!status);\r\n    // Toggle Backdrop and show notification\r\n    ref.current.toggleBackdrop();\r\n    if (status) {\r\n      enqueueSnackbar(\"Update successful\", {\r\n        variant: \"success\"\r\n      });\r\n    } else {\r\n      enqueueSnackbar(\"Something went wrong!\", {\r\n        variant: \"error\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleApprove = async (e, rowData) => {\r\n    if (window.confirm(rowData.memberID)) {\r\n      // Toggle Backdrop\r\n      ref.current.toggleBackdrop();\r\n      // Process\r\n      await ref.current.sleep(2000);\r\n      console.log(\"Successful : \", JSON.stringify(rowData));\r\n      setStatus(!status);\r\n      // Toggle Backdrop and show notification\r\n      ref.current.toggleBackdrop();\r\n      if (status) {\r\n        enqueueSnackbar(\"Update successful\", {\r\n          variant: \"success\"\r\n        });\r\n      } else {\r\n        enqueueSnackbar(\"Something went wrong!\", {\r\n          variant: \"error\"\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReject = async (e, rowData) => {\r\n    if (window.confirm(rowData.memberID)) {\r\n      // Toggle Backdrop\r\n      ref.current.toggleBackdrop();\r\n      // Process\r\n      await ref.current.sleep(2000);\r\n      console.log(\"Reject : \", JSON.stringify(rowData));\r\n      setStatus(!status);\r\n      // Toggle Backdrop and show notification\r\n      ref.current.toggleBackdrop();\r\n      if (status) {\r\n        enqueueSnackbar(\"Update successful\", {\r\n          variant: \"success\"\r\n        });\r\n      } else {\r\n        enqueueSnackbar(\"Something went wrong!\", {\r\n          variant: \"error\"\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // Process handler\r\n\r\n  const queryApplicantNotEnroll = () => {\r\n    setApplicantList([\r\n      \"Wannasiri Wirasut\",\r\n      \"Kobsak Perm\",\r\n      \"Visavaj Ice\",\r\n      \"Sorasak Toey\"\r\n    ]);\r\n  };\r\n\r\n  const queryApplicant = () => {\r\n    setActivity(\"Songkran\");\r\n\r\n    setApplicant({\r\n      columns: [\r\n        { title: \"Name\", field: \"name\" },\r\n        { title: \"Applied date\", field: \"date\" },\r\n        { title: \"Status\", field: \"status\" }\r\n      ],\r\n      data: [\r\n        {\r\n          memberID: 1,\r\n          name: \"Sabrina Morales\",\r\n          date: \"12-02-2020\",\r\n          status: \"Not Joined\"\r\n        },\r\n        {\r\n          memberID: 2,\r\n          name: \"Elle Macdonald\",\r\n          date: \"10-02-2020\",\r\n          status: \"Not Joined\"\r\n        },\r\n        {\r\n          memberID: 3,\r\n          name: \"Hannah Finley\",\r\n          date: \"09-02-2020\",\r\n          status: \"Not Joined\"\r\n        },\r\n        {\r\n          memberID: 4,\r\n          name: \"Demi Hickman\",\r\n          date: \"08-02-2020\",\r\n          status: \"Joined\"\r\n        },\r\n        {\r\n          memberID: 5,\r\n          name: \"Arabella Walter\",\r\n          date: \"08-02-2020\",\r\n          status: \"Not Joined\"\r\n        },\r\n        {\r\n          memberID: 6,\r\n          name: \"Kye Baird\",\r\n          date: \"07-02-2020\",\r\n          status: \"Not Joined\"\r\n        },\r\n        {\r\n          memberID: 7,\r\n          name: \"Adrian Schwartz\",\r\n          date: \"07-02-2020\",\r\n          status: \"Joined\"\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryApplicantNotEnroll();\r\n      queryApplicant();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-center px-2 pb-4\">\r\n          <div className=\"col-12 col-md-6\">\r\n            {applicantList && applicant ? (\r\n              <div className=\"card colorItem\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    <GroupAddIcon className=\"colorDefault2\" fontSize=\"large\" />{\" \"}\r\n                    &nbsp;Applicant\r\n                  </h5>\r\n                  <h6 className=\"card-subtitle text-muted\">\r\n                    Applicant detail :\r\n                  </h6>\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"col-md-12 pt-4\">\r\n                      <Autocomplete\r\n                        options={applicantList}\r\n                        getOptionLabel={option => option}\r\n                        renderInput={params => (\r\n                          <TextField\r\n                            {...params}\r\n                            name=\"applicant\"\r\n                            label=\"Applicant\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            inputRef={register({ required: true })}\r\n                            error={!!errors.applicant}\r\n                            helperText={\r\n                              errors.applicant &&\r\n                              (errors.applicant.type === \"required\" &&\r\n                                \"Please select applicant\")\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-12 pt-4 text-center\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        endIcon={<SaveIcon />}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={40}\r\n                  animation=\"wave\"\r\n                />\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={190}\r\n                  animation=\"wave\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-end px-2 pb-1\">\r\n          <div className=\"d-flex align-right px-2\">\r\n            {applicantList && applicant ? (\r\n              <ExportApplicant\r\n                id={id}\r\n                activity={activity}\r\n                applicant={applicant}\r\n                icon={\r\n                  <GetAppIcon style={{ cursor: \"pointer\", fontSize: \"35\" }} />\r\n                }\r\n              />\r\n            ) : (\r\n              <div>\r\n                <Skeleton\r\n                  animation=\"wave\"\r\n                  variant=\"circle\"\r\n                  width={40}\r\n                  height={40}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {activityPending ? (\r\n          <div>\r\n            <div className=\"row justify-content-center px-2\">\r\n              <div className=\"col-12\">\r\n                {applicantList && applicant ? (\r\n                  <ActivityPendingTable\r\n                    icon={\r\n                      <PeopleAltIcon\r\n                        className=\"colorDefault2\"\r\n                        fontSize=\"large\"\r\n                      />\r\n                    }\r\n                    title=\"Applicant\"\r\n                    transaction={applicant}\r\n                    handleReject={handleReject}\r\n                    error=\"No applicant !\"\r\n                  />\r\n                ) : (\r\n                  <ActivityPendingTable />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"row justify-content-center px-2\">\r\n              <div className=\"col-12\">\r\n                {applicantList && applicant ? (\r\n                  <ActivitySuccessTable\r\n                    icon={\r\n                      <PeopleAltIcon\r\n                        className=\"colorDefault2\"\r\n                        fontSize=\"large\"\r\n                      />\r\n                    }\r\n                    title=\"Applicant\"\r\n                    transaction={applicant}\r\n                    handleApprove={handleApprove}\r\n                    error=\"No applicant !\"\r\n                  />\r\n                ) : (\r\n                  <ActivitySuccessTable />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <ToggleBackdrop ref={ref} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/scg-logo.6be53fb6.png\";","import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\n// Components\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport logo from \"./../../../source/scg-logo.png\";\r\n\r\n// Validator\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { Formik } from \"formik\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n// import LoadingPage from \"./../LoadingPage/LoadingPage\";\r\n\r\n// import * as loginActions from \"./../../../actions/login.action\";\r\n\r\nimport history from \"./../../../history\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"auto\",\r\n    maxWidth: 345,\r\n    marginTop: 50\r\n  },\r\n  media: {\r\n    height: 85,\r\n    padding: 20,\r\n    paddingBottom: 0,\r\n    margin: 10\r\n  },\r\n  version: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10\r\n  },\r\n  showPassword: {\r\n    position: \"absolute\",\r\n    justifyContent: \"center\"\r\n  }\r\n});\r\n\r\nconst LoginButton = withStyles(theme => ({\r\n  root: {\r\n    marginTop: 10,\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n    \"&:hover\": {\r\n      backgroundColor: red[700]\r\n    }\r\n  }\r\n}))(Button);\r\n\r\nconst member = [\r\n  {\r\n    user: \"admin\",\r\n    pass: \"admin\",\r\n    type: \"1\"\r\n  },\r\n  {\r\n    user: \"manager\",\r\n    pass: \"manager\",\r\n    type: \"2\"\r\n  },\r\n  {\r\n    user: \"user\",\r\n    pass: \"user\",\r\n    type: \"3\"\r\n  }\r\n];\r\n\r\nexport default function LoginPage({ loginAuth, setParentState }) {\r\n  const classes = useStyles();\r\n  // const loginReducer = useSelector(({ loginReducer }) => loginReducer);\r\n\r\n  const [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n\r\n  const [isInvalid, setIsInvalid] = useState(false);\r\n\r\n  // Validators\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const onSubmit = data => {\r\n    let type;\r\n    for (var i in member) {\r\n      type =\r\n        member[i].user === data.username && member[i].pass === data.password\r\n          ? member[i].type\r\n          : 0;\r\n      if (type) break;\r\n    }\r\n\r\n    if (type) {\r\n      loginAuth.authenticate(() => {\r\n        setRedirectToReferrer(true);\r\n        setParentState(true);\r\n      }, type);\r\n    } else {\r\n      setIsInvalid(true);\r\n    }\r\n  };\r\n  // end Validators\r\n\r\n  if (redirectToReferrer === true) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  // const showForm = ({\r\n  //   values,\r\n  //   handleChange,\r\n  //   handleSubmit,\r\n  //   setFieldValue,\r\n  //   isSubmitting\r\n  // }) => {\r\n  //   return (\r\n  //     <form onSubmit={handleSubmit}>\r\n  //       <TextField\r\n  //         variant=\"outlined\"\r\n  //         margin=\"normal\"\r\n  //         required\r\n  //         fullWidth\r\n  //         id=\"username\"\r\n  //         label=\"Username\"\r\n  //         onChange={handleChange}\r\n  //         value={values.username}\r\n  //         autoComplete=\"email\"\r\n  //         autoFocus\r\n  //       />\r\n\r\n  //       <TextField\r\n  //         variant=\"outlined\"\r\n  //         margin=\"normal\"\r\n  //         required\r\n  //         fullWidth\r\n  //         id=\"password\"\r\n  //         label=\"Password\"\r\n  //         onChange={handleChange}\r\n  //         value={values.password}\r\n  //         type=\"password\"\r\n  //         autoComplete=\"current-password\"\r\n  //       />\r\n\r\n  //       {/* {loginReducer.isError && (\r\n  //         <Alert severity=\"error\" style={{ marginBottom: 8 }}>\r\n  //           Invalid account!\r\n  //         </Alert>\r\n  //       )} */}\r\n\r\n  //       <LoginButton\r\n  //         type=\"submit\"\r\n  //         fullWidth\r\n  //         variant=\"contained\"\r\n  //         disabled={isSubmitting}\r\n  //         className={classes.submit}\r\n  //       >\r\n  //         {\" \"}\r\n  //         {isSubmitting ? \"Please wait...\" : \"Sign In\"}\r\n  //       </LoginButton>\r\n\r\n  //       <Typography variant=\"body2\" noWrap className={classes.version}>\r\n  //         Version {process.env.REACT_APP_VERSION}\r\n  //       </Typography>\r\n  //     </form>\r\n  //   );\r\n  // };\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"pr-5\">\r\n      <Card className={classes.root}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={logo}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"h5\" align=\"center\">\r\n            Coin & Reward\r\n          </Typography>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"col-md-12 pt-3\">\r\n              <TextField\r\n                type=\"text\"\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                inputRef={register({ required: true })}\r\n                error={!!errors.username}\r\n                helperText={\r\n                  errors.username &&\r\n                  (errors.username.type === \"required\" &&\r\n                    \"Please fill username\")\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-md-12 pt-3\">\r\n              <TextField\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                inputRef={register({ required: true })}\r\n                error={!!errors.password}\r\n                helperText={\r\n                  errors.password &&\r\n                  (errors.password.type === \"required\" &&\r\n                    \"Please fill password\")\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-md-12 pt-3 text-center\">\r\n              <LoginButton\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                disabled={false}\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n                {/* {isSubmitting ? \"Please wait...\" : \"Sign In\"} */}\r\n              </LoginButton>\r\n            </div>\r\n          </form>\r\n\r\n          {isInvalid && (\r\n            <div className=\"p-3\">\r\n              <Alert severity=\"error\">Invalid account!</Alert>\r\n            </div>\r\n          )}\r\n\r\n          {/* {loginReducer.isError && (\r\n            <Alert severity=\"error\" style={{ marginBottom: 8 }}>\r\n              Invalid account!\r\n            </Alert>\r\n          )} */}\r\n\r\n          {/* HOC */}\r\n          {/* <Formik\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              setTimeout(() => {\r\n                dispatch(loginActions.login(values, props.history));\r\n                setSubmitting(false);\r\n              }, 1000);\r\n            }}\r\n            initialValues={{ username: \"\", password: \"\" }}\r\n          >\r\n            {props => showForm(props)}\r\n          </Formik> */}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n    // <div>\r\n    //   {loginActions.isLoggedIn ? (\r\n    //     <Card className={classes.root}>\r\n    //       <CardMedia\r\n    //         className={classes.media}\r\n    //         image={`${process.env.PUBLIC_URL}/assets/images/LOGO SCG.png`}\r\n    //         title=\"Contemplative Reptile\"\r\n    //       />\r\n    //       <CardContent>\r\n    //         <Typography variant=\"h4\">Login</Typography>\r\n    //         {/* HOC */}\r\n    //         <Formik\r\n    //           onSubmit={(values, { setSubmitting }) => {\r\n    //             setTimeout(() => {\r\n    //               dispatch(loginActions.login(values, props.history));\r\n    //               setSubmitting(false);\r\n    //             }, 1000);\r\n    //           }}\r\n    //           initialValues={{ username: \"\", password: \"\" }}\r\n    //         >\r\n    //           {props => showForm(props)}\r\n    //         </Formik>\r\n    //       </CardContent>\r\n    //     </Card>\r\n    //   ) : (\r\n    //     <LoadingPage />\r\n    //   )}\r\n    // </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MonetizationOnRoundedIcon from \"@material-ui/icons/MonetizationOnRounded\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\n\r\n// Backdrop and Notification\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\n// History\r\nimport history from \"./../../../history\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    flexWrap: \"nowrap\",\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: \"translateZ(0)\"\r\n  },\r\n  title: {\r\n    color: \"#fff\"\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to top, rgba(0,0,0,1) 0%, rgba(0,0,0,0.5) 70%, rgba(0,0,0,0) 100%)\"\r\n  }\r\n}));\r\n\r\nexport default function CarouselItem({ itemType, items, setMenuSelected }) {\r\n  const classes = useStyles();\r\n\r\n  const handleClick = id => {\r\n    setMenuSelected(itemType === \"reward\" ? \"reward\" : \"activity\");\r\n    history.push(itemType === \"reward\" ? `/reward/${id}` : `/activity/${id}`);\r\n  };\r\n\r\n  const displayTitle = (name, price, coin) => {\r\n    return (\r\n      <div>\r\n        {name} &nbsp;\r\n        {coin === \"heart\" ? (\r\n          <FavoriteIcon color=\"secondary\" />\r\n        ) : (\r\n          <MonetizationOnRoundedIcon className=\"colorCoin\" />\r\n        )}\r\n        &nbsp;\r\n        {price}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {items ? (\r\n        <GridList\r\n          className={classes.gridList}\r\n          cols={\r\n            window.innerWidth < 1496\r\n              ? window.innerWidth < 1278\r\n                ? window.innerWidth < 720\r\n                  ? 1\r\n                  : 3\r\n                : 4\r\n              : 5\r\n          }\r\n        >\r\n          {items.map(value => (\r\n            <GridListTile\r\n              key={value.id}\r\n              onClick={() => handleClick(value.id)}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <img\r\n                src={\r\n                  itemType === \"reward\"\r\n                    ? `./images/rewards/${value.image}`\r\n                    : `./images/activities/${value.image}`\r\n                }\r\n                alt={value.image}\r\n              />\r\n              <GridListTileBar\r\n                title={displayTitle(value.name, value.price, value.coin)}\r\n                subtitle={\r\n                  itemType === \"reward\"\r\n                    ? \"Exp: \" + value.expiryDate\r\n                    : \"Date: \" + value.date + \" Place: \" + value.place\r\n                }\r\n                classes={{\r\n                  root: classes.titleBar,\r\n                  title: classes.title\r\n                }}\r\n                actionIcon={\r\n                  <IconButton onClick={() => handleClick(value.id)}>\r\n                    {/* <InfoIcon className={classes.title} /> */}\r\n                    <FiberManualRecordIcon\r\n                      className={\r\n                        (classes.title,\r\n                        value.status ? \"text-success\" : \"text-danger\")\r\n                      }\r\n                      fontSize=\"small\"\r\n                    />\r\n                  </IconButton>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      ) : (\r\n        <div>\r\n          <Skeleton width=\"100%\" animation=\"wave\" />\r\n          <Skeleton variant=\"rect\" width=\"100%\" height={180} animation=\"wave\" />\r\n          <Skeleton width=\"100%\" animation=\"wave\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Component\r\nimport CarouselItem from \"./../../CarouselItem/CarouselItem\";\r\n\r\n// Icon\r\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\r\n\r\n// History\r\nimport history from \"./../../../../history\";\r\n\r\nexport default function RewardCarousel({ setMenuSelected }) {\r\n  const [items, setItems] = useState(null);\r\n\r\n  const handleClick = () => {\r\n    setMenuSelected(\"activity\");\r\n    history.push(`/activity`);\r\n  };\r\n\r\n  const queryItem = () => {\r\n    setItems([\r\n      {\r\n        id: \"1\",\r\n        image: \"planting.jpg\",\r\n        name: \"Planting\",\r\n        price: 15,\r\n        coin: \"heart\",\r\n        date: \"20/04/2020\",\r\n        place: \"Rayong\",\r\n        status: 1\r\n      },\r\n      {\r\n        id: \"2\",\r\n        image: \"songkran.jpg\",\r\n        name: \"Songkran\",\r\n        price: 5,\r\n        coin: \"heart\",\r\n        date: \"23/03/2020\",\r\n        place: \"Rayong\",\r\n        status: 1\r\n      },\r\n      {\r\n        id: \"3\",\r\n        image: \"run.jpg\",\r\n        name: \"Running\",\r\n        price: 10,\r\n        coin: \"heart\",\r\n        date: \"07/04/2020\",\r\n        place: \"Rayong\",\r\n        status: 1\r\n      },\r\n      {\r\n        id: \"4\",\r\n        image: \"school.jpg\",\r\n        name: \"Libraly building\",\r\n        price: 15,\r\n        coin: \"heart\",\r\n        date: \"15/08/2020\",\r\n        place: \"Rayong\",\r\n        status: 1\r\n      },\r\n      {\r\n        id: \"5\",\r\n        image: \"fish2.jpg\",\r\n        name: \"Home fish\",\r\n        price: 20,\r\n        coin: \"heart\",\r\n        date: \"23/08/2020\",\r\n        place: \"Pattaya\"\r\n      }\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryItem();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {items ? (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <h4>\r\n                <AccessibilityNewIcon\r\n                  fontSize=\"large\"\r\n                  className=\"colorDefault2\"\r\n                />{\" \"}\r\n                &nbsp;Activity :\r\n              </h4>\r\n            </div>\r\n            <div className=\"col-6 text-right pr-3 \">\r\n              <p\r\n                className=\"text-primary\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={handleClick}\r\n              >\r\n                See more\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <CarouselItem\r\n            itemType=\"activity\"\r\n            items={items}\r\n            setMenuSelected={setMenuSelected}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <CarouselItem />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Component\r\nimport CarouselItem from \"./../../CarouselItem/CarouselItem\";\r\n\r\n// Icon\r\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\r\n\r\n// History\r\nimport history from \"./../../../../history\";\r\n\r\nexport default function RewardCarousel({ setMenuSelected }) {\r\n  const [items, setItems] = useState(null);\r\n\r\n  const handleClick = () => {\r\n    setMenuSelected(\"reward\");\r\n    history.push(`/reward`);\r\n  };\r\n\r\n  const queryItem = () => {\r\n    setItems([\r\n      {\r\n        id: \"1\",\r\n        image: \"computer.jpg\",\r\n        name: \"Computer\",\r\n        price: 50,\r\n        coin: \"gold\",\r\n        expiryDate: \"31/12/2020\",\r\n        status: 1\r\n      },\r\n      {\r\n        id: \"2\",\r\n        image: \"mobile.jpg\",\r\n        name: \"Mobile\",\r\n        price: 15,\r\n        coin: \"heart\",\r\n        expiryDate: \"23/04/2020\",\r\n        status: 1\r\n      },\r\n      {\r\n        id: \"3\",\r\n        image: \"bag.jpg\",\r\n        name: \"Bag\",\r\n        price: 20,\r\n        coin: \"gold\",\r\n        expiryDate: \"31/12/2020\",\r\n        status: 0\r\n      },\r\n      {\r\n        id: \"4\",\r\n        image: \"tv.jpg\",\r\n        name: \"TV\",\r\n        price: 100,\r\n        coin: \"heart\",\r\n        expiryDate: \"31/12/2020\",\r\n        status: 1\r\n      },\r\n      {\r\n        id: \"5\",\r\n        image: \"foodpanda.png\",\r\n        name: \"Food panda\",\r\n        price: 5,\r\n        coin: \"gold\",\r\n        expiryDate: \"31/12/2020\",\r\n        status: 0\r\n      }\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryItem();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {items ? (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <h4>\r\n                <FastfoodIcon fontSize=\"large\" className=\"colorDefault2\" />{\" \"}\r\n                &nbsp;Reward :\r\n              </h4>\r\n            </div>\r\n            <div className=\"col-6 text-right pr-3 \">\r\n              <p\r\n                className=\"text-primary\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={handleClick}\r\n              >\r\n                See more\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <CarouselItem\r\n            itemType=\"reward\"\r\n            items={items}\r\n            setMenuSelected={setMenuSelected}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <CarouselItem />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Styles\r\nimport \"./LeaderBoard.scss\";\r\n\r\n// Icons\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\n\r\n// Backdrop and Notification\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\n// Leaderboard Component\r\nfunction LeaderBoardList(props) {\r\n  const { title, type, data } = props;\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center pb-3\">\r\n      <div className={\"leaderboard-\" + type}>\r\n        <h1 className=\"pt-4\">\r\n          <img src=\"./images/icons/trophy.png\" width=\"28px\" alt=\"Trophy\" />\r\n          <span className=\"p-1\"> {title}</span>\r\n        </h1>\r\n        <ol\r\n          style={\r\n            !data[0].no\r\n              ? { counterReset: \"leaderboard\" }\r\n              : { counterReset: \"leaderboard \" + (data[0].no - 1) }\r\n          }\r\n        >\r\n          {data.map(value => {\r\n            return (\r\n              <li key={value.name}>\r\n                <mark style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <div className=\"row\">\r\n                    <div className=\"d-flex pl-4\">\r\n                      <img\r\n                        src={\"./images/avatars/\" + value.image}\r\n                        alt={value.name}\r\n                        width=\"40\"\r\n                        className=\"rounded\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-flex pl-3 pt-2\">\r\n                      {value.department\r\n                        ? value.name + \" (\" + value.department + \")\"\r\n                        : value.name}\r\n                    </div>\r\n                  </div>\r\n                </mark>\r\n                {window.innerWidth > 400 ? (\r\n                  <small className=\"pr-3\">\r\n                    {value.coinMonth + \" - \" + value.coinSummary}\r\n                  </small>\r\n                ) : (\r\n                  <small className=\"pr-3\">&nbsp;</small>\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// end Leaderboard Component\r\n\r\nexport default function LeaderBoard() {\r\n  // Useful States\r\n  const [coin, setCoin] = useState(\"heart\");\r\n  const [leaderDetail, setLeaderDetail] = useState(null);\r\n\r\n  // Useful Handlers\r\n  const handleChangeCoin = () => {\r\n    setCoin(coin === \"heart\" ? \"gold\" : \"heart\");\r\n  };\r\n\r\n  // Process handler\r\n  const queryLeaderboard = async () => {\r\n    // Toggle Backdrop\r\n    // ref.current.toggleBackdrop();\r\n    // Process\r\n    // await ref.current.sleep(2000);\r\n    setLeaderDetail({\r\n      employeeGold: [\r\n        {\r\n          name: \"Hansen\",\r\n          image: \"avatar1.jpg\",\r\n          coinMonth: 12,\r\n          coinSummary: 111,\r\n          department: \"ab\"\r\n        },\r\n        {\r\n          name: \"Catherine\",\r\n          image: \"avatar2.jpg\",\r\n          coinMonth: 23,\r\n          coinSummary: 514,\r\n          department: \"ab\"\r\n        },\r\n        {\r\n          name: \"Helene\",\r\n          image: \"avatar3.jpg\",\r\n          coinMonth: 23,\r\n          coinSummary: 302,\r\n          department: \"cb\"\r\n        },\r\n        {\r\n          name: \"Tyler\",\r\n          image: \"avatar1.jpg\",\r\n          coinMonth: 12,\r\n          coinSummary: 727,\r\n          department: \"cb\"\r\n        },\r\n        {\r\n          name: \"Donovan\",\r\n          image: \"avatar2.jpg\",\r\n          coinMonth: 3,\r\n          coinSummary: 784,\r\n          department: \"ab\"\r\n        },\r\n        {\r\n          name: \"Alisha\",\r\n          image: \"avatar3.jpg\",\r\n          coinMonth: 32,\r\n          coinSummary: 505,\r\n          department: \"ab\"\r\n        },\r\n        {\r\n          name: \"Pearlie\",\r\n          image: \"avatar1.jpg\",\r\n          coinMonth: 12,\r\n          coinSummary: 680,\r\n          department: \"cb\"\r\n        },\r\n        {\r\n          name: \"Wilma\",\r\n          image: \"avatar2.jpg\",\r\n          coinMonth: 23,\r\n          coinSummary: 415,\r\n          department: \"cb\"\r\n        },\r\n        {\r\n          name: \"Pearl\",\r\n          image: \"avatar3.jpg\",\r\n          coinMonth: 3,\r\n          coinSummary: 367,\r\n          department: \"ab\"\r\n        },\r\n        {\r\n          name: \"Lucile\",\r\n          image: \"avatar1.jpg\",\r\n          coinMonth: 8,\r\n          coinSummary: 896,\r\n          department: \"cb\"\r\n        }\r\n      ],\r\n      managerGold: [\r\n        {\r\n          name: \"Hansen\",\r\n          image: \"avatar2.jpg\",\r\n          coinMonth: 12,\r\n          coinSummary: 222,\r\n          department: \"ab\"\r\n        },\r\n        {\r\n          name: \"Catherine\",\r\n          image: \"avatar3.jpg\",\r\n          coinMonth: 23,\r\n          coinSummary: 514,\r\n          department: \"ab\"\r\n        },\r\n        {\r\n          name: \"Helene\",\r\n          image: \"avatar1.jpg\",\r\n          coinMonth: 23,\r\n          coinSummary: 302,\r\n          department: \"cb\"\r\n        },\r\n        {\r\n          name: \"Tyler\",\r\n          image: \"avatar2.jpg\",\r\n          coinMonth: 12,\r\n          coinSummary: 727,\r\n          department: \"cb\"\r\n        },\r\n        {\r\n          name: \"Donovan\",\r\n          image: \"avatar3.jpg\",\r\n          coinMonth: 3,\r\n          coinSummary: 784,\r\n          department: \"ab\"\r\n        },\r\n        {\r\n          name: \"Alisha\",\r\n          image: \"avatar1.jpg\",\r\n          coinMonth: 32,\r\n          coinSummary: 505,\r\n          department: \"ab\"\r\n        },\r\n        {\r\n          name: \"Pearlie\",\r\n          image: \"avatar2.jpg\",\r\n          coinMonth: 12,\r\n          coinSummary: 680,\r\n          department: \"cb\"\r\n        },\r\n        {\r\n          name: \"Wilma\",\r\n          image: \"avatar3.jpg\",\r\n          coinMonth: 23,\r\n          coinSummary: 415,\r\n          department: \"cb\"\r\n        },\r\n        {\r\n          name: \"Pearl\",\r\n          image: \"avatar1.jpg\",\r\n          coinMonth: 3,\r\n          coinSummary: 367,\r\n          department: \"ab\"\r\n        },\r\n        {\r\n          name: \"Lucile\",\r\n          image: \"avatar2.jpg\",\r\n          coinMonth: 8,\r\n          coinSummary: 896,\r\n          department: \"cb\"\r\n        }\r\n      ],\r\n      self: [\r\n        {\r\n          name: \"Wirasut\",\r\n          image: \"avatar3.jpg\",\r\n          coinMonth: 8,\r\n          coinSummary: 896,\r\n          no: 51\r\n        }\r\n      ]\r\n    });\r\n    // setStatus(true);\r\n    // Toggle Backdrop and show notification\r\n    // ref.current.toggleBackdrop();\r\n  };\r\n  // end Process handler\r\n\r\n  // Onload\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryLeaderboard();\r\n    }, 1000);\r\n  }, []);\r\n  // end Onload\r\n\r\n  return (\r\n    <div>\r\n      {leaderDetail ? (\r\n        <div>\r\n          <div className=\"row justify-content-center p-3\">\r\n            <div className=\"col-10 col-md-3 text-center border border-danger rounded-pill\">\r\n              <IconButton\r\n                color={coin === \"heart\" ? \"secondary\" : \"default\"}\r\n                onClick={handleChangeCoin}\r\n              >\r\n                <FavoriteIcon fontSize=\"large\" />\r\n              </IconButton>\r\n              <IconButton\r\n                className={coin === \"gold\" && \"colorCoin\"}\r\n                onClick={handleChangeCoin}\r\n              >\r\n                <MonetizationOnIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-center px-3\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <LeaderBoardList\r\n                title={\"Top 10 Employee's \" + coin}\r\n                type=\"Employee\"\r\n                data={\r\n                  coin === \"Heart\"\r\n                    ? leaderDetail.employeeGold //Heart\r\n                    : leaderDetail.employeeGold\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <LeaderBoardList\r\n                title={\"Top 10 Manager's \" + coin}\r\n                type=\"Manager\"\r\n                data={\r\n                  coin === \"Heart\"\r\n                    ? leaderDetail.managerGold // Heart\r\n                    : leaderDetail.managerGold\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {true ? (\r\n            <div className=\"row justify-content-center px-3\">\r\n              <div className=\"col-12 col-md-6\">\r\n                <LeaderBoardList\r\n                  title={\"My ranking \"}\r\n                  type=\"Self\"\r\n                  data={leaderDetail.self}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"row justify-content-center p-3\">\r\n            <div className=\"col-12 col-md-4 text-center\">\r\n              <Skeleton\r\n                variant=\"rect\"\r\n                width=\"100%\"\r\n                height={70}\r\n                animation=\"wave\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-center px-3 pb-3\">\r\n            <div className=\"col-12 col-md-4 text-center\">\r\n              <Skeleton\r\n                variant=\"rect\"\r\n                width=\"100%\"\r\n                height={50}\r\n                animation=\"wave\"\r\n              />\r\n              <Skeleton width=\"100%\" animation=\"wave\" />\r\n              <Skeleton\r\n                variant=\"rect\"\r\n                width=\"100%\"\r\n                height={550}\r\n                animation=\"wave\"\r\n              />\r\n            </div>\r\n            <div className=\"col-12 col-md-4 text-center\">\r\n              <Skeleton\r\n                variant=\"rect\"\r\n                width=\"100%\"\r\n                height={50}\r\n                animation=\"wave\"\r\n              />\r\n              <Skeleton width=\"100%\" animation=\"wave\" />\r\n              <Skeleton\r\n                variant=\"rect\"\r\n                width=\"100%\"\r\n                height={550}\r\n                animation=\"wave\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Animated } from \"react-animated-css\";\r\n// Components\r\nimport ActivityCorusel from \"./../Member/CarouselList/ActivityCarousel\";\r\nimport RewardCorusel from \"./../Member/CarouselList/RewardCarousel\";\r\nimport Leaderboard from \"./../Member/LeaderBoard/LeaderBoard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wallet: {\r\n    display: \"flex\", justifyContent: \"center\", padding: 30, width: 500,\r\n  }\r\n}));\r\n\r\nexport default function Home({ setMenuSelected }) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"px-2\" style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", marginBottom: 20 }}>\r\n        <div style={{ width: \"50%\", display: \"flex\", justifyContent: \"center\" }}>\r\n          <Paper className={classes.wallet}>\r\n            <div style={{\r\n              display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"40%\"\r\n            }}>\r\n              <Animated animationIn=\"bounceInLeft\" animationOut=\"fadeOut\" isVisible={true}>\r\n                <img src={`${process.env.PUBLIC_URL}/images/assets/coin.png`} width={100} style={{}} />\r\n              </Animated>\r\n\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"60%\" }}>\r\n              <Typography variant=\"h2\" style={{ fontSize: 100 }}> 5 </Typography>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n        <div style={{ width: \"50%\", display: \"flex\", justifyContent: \"center\" }}>\r\n          <Paper style={{ display: \"flex\", justifyContent: \"center\", padding: 30, width: 500 }}>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"40%\" }}>\r\n              <img src={`${process.env.PUBLIC_URL}/images/assets/heart.png`} width={100} style={{}} />\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"60%\" }}>\r\n              <Typography variant=\"h2\" style={{ fontSize: 100 }}> 10 </Typography>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-2\">\r\n        <div className=\"shadow mb-3 bg-white rounded\">\r\n          <div className=\"row justify-content-center p-3\">\r\n            <div className=\"col-12\">\r\n              <RewardCorusel setMenuSelected={setMenuSelected} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-2\">\r\n        <div className=\"shadow mb-3 bg-white rounded\">\r\n          <div className=\"row justify-content-center p-3\">\r\n            <div className=\"col-12\">\r\n              <ActivityCorusel setMenuSelected={setMenuSelected} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-2\">\r\n        <div className=\"shadow mb-3 bg-white rounded\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-12\">\r\n              <Leaderboard />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\n\n// Component\nimport { TransactionTable } from \"./../../TransactionTable/TransactionTable\";\n\n// Icons\nimport PlayForWorkIcon from \"@material-ui/icons/PlayForWork\";\n\nexport default function CoinTransaction({ type }) {\n  const [sendTransaction, setSendTransaction] = useState(null);\n  const [recieveTransaction, setRecieveTransaction] = useState(null);\n\n  const querySendTransaction = () => {\n    setSendTransaction({\n      columns: [\n        { title: \"Reciever\", field: \"actor\" },\n        { title: \"Amount\", field: \"amount\" },\n        { title: \"Date\", field: \"date\" },\n        { title: \"Approved by\", field: \"inspector\" }\n      ],\n      data: [\n        {\n          actor: \"James\",\n          amount: \"5 Hearts\",\n          date: \"12/03/2020 12:45:09\",\n          inspector: \"Kane\",\n          detail: \"Reason detail\"\n        },\n        {\n          actor: \"Joshua\",\n          amount: \"2 Hearts\",\n          date: \"09/03/2020 11:20:12\",\n          inspector: \"Kane\",\n          detail: \"Reason detail\"\n        },\n        {\n          actor: \"Christopher\",\n          amount: \"2 Hearts\",\n          date: \"05/03/2020 12:20:20\",\n          inspector: \"Perm\",\n          detail: \"Reason detail\"\n        },\n        {\n          actor: \"Thomas\",\n          amount: \"2 Hearts\",\n          date: \"02/03/2020 14:45:31\",\n          inspector: \"Perm\",\n          detail: \"Reason detail\"\n        }\n      ]\n    });\n  };\n\n  const queryRecieveTransaction = () => {\n    setRecieveTransaction({\n      columns: [\n        { title: \"Sender\", field: \"actor\" },\n        { title: \"Amount\", field: \"amount\" },\n        { title: \"Date\", field: \"date\" },\n        { title: \"Approved by\", field: \"inspector\" }\n      ],\n      data: [\n        {\n          actor: \"David\",\n          amount: \"5 Hearts\",\n          date: \"20/03/2020 08:20:59\",\n          inspector: \"Ice\",\n          detail: \"Reason detail\"\n        },\n        {\n          actor: \"Joseph\",\n          amount: \"4 Hearts\",\n          date: \"17/03/2020 09:21:22\",\n          inspector: \"Toey\",\n          detail: \"Reason detail\"\n        },\n        {\n          actor: \"William\",\n          amount: \"5 Hearts\",\n          date: \"15/03/2020 11:29:09\",\n          inspector: \"Toey\",\n          detail: \"Reason detail\"\n        },\n        {\n          actor: \"Matthew\",\n          amount: \"2 Hearts\",\n          date: \"12/03/2020 17:12:23\",\n          inspector: \"Toey\",\n          detail: \"Reason detail\"\n        },\n        {\n          actor: \"James\",\n          amount: \"3 Hearts\",\n          date: \"12/03/2020 13:30:00\",\n          inspector: \"Kane\",\n          detail: \"Reason detail\"\n        },\n        {\n          actor: \"Davis\",\n          amount: \"2 Hearts\",\n          date: \"11/02/2020 12:20:00\",\n          inspector: \"Perm\",\n          detail: \"Reason detail\"\n        },\n        {\n          actor: \"Wilson\",\n          amount: \"5 Hearts\",\n          date: \"12/01/2020 15:30:00\",\n          inspector: \"Kane\",\n          detail: \"Reason detail\"\n        }\n      ]\n    });\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      querySendTransaction();\n      queryRecieveTransaction();\n    }, 1000);\n  }, []);\n\n  return (\n    <div>\n      {sendTransaction && recieveTransaction ? (\n        type === \"send\" ? (\n          <TransactionTable\n            icon={\n              <PlayForWorkIcon\n                className=\"colorDefault2\"\n                fontSize=\"large\"\n                style={{ transform: \"rotate(270deg)\" }}\n              />\n            }\n            title=\"Transfer\"\n            transaction={sendTransaction}\n            showDetail={true}\n            error=\"No transaction !\"\n          />\n        ) : (\n          <TransactionTable\n            icon={\n              <PlayForWorkIcon\n                className=\"colorDefault2\"\n                fontSize=\"large\"\n                style={{ transform: \"rotate(90deg)\" }}\n              />\n            }\n            title=\"Recieve\"\n            transaction={recieveTransaction}\n            showDetail={true}\n            error=\"No transaction !\"\n          />\n        )\n      ) : (\n        <TransactionTable />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\n// Components\r\nimport TransferForm from \"./../Member/TransferForm/TransferForm\";\r\nimport TransferTransaction from \"./../Member/TransferTransaction/TransferTransaction\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-12 col-md-6 pb-3\">\r\n            <div className=\"shadow mb-3 bg-white rounded\">\r\n              <TransferForm />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-12 mb-3\">\r\n            <TransferTransaction type=\"send\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-12 mb-3\">\r\n            <TransferTransaction type=\"reciever\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// Conponents\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n// Icons\r\nimport RedeemIcon from \"@material-ui/icons/Redeem\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\n\r\n// Backdrop and Notification\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport history from \"./../../../history\";\r\n\r\n// Reward and Pagination Style\r\nconst useStyles = makeStyles(theme => ({\r\n  avatar: {\r\n    backgroundColor: \"#424242\",\r\n    color: \"#fafafa\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    backgroundColor: \"#000\"\r\n  }\r\n}));\r\n// end Reward and Pagination Style\r\n\r\n// Reward Component\r\nexport default function Reward(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleButtonClick = () => {\r\n    history.push(itemType === \"reward\" ? `/reward/${id}` : `/activity/${id}`);\r\n  };\r\n\r\n  const {\r\n    itemType,\r\n    id,\r\n    type,\r\n    title,\r\n    subTitle,\r\n    image,\r\n    detail,\r\n    price,\r\n    coin,\r\n    amount,\r\n    limitDate,\r\n    isLoad\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-2\">\r\n      <Card className=\"colorItem\">\r\n        <CardHeader\r\n          avatar={\r\n            !isLoad ? (\r\n              <Avatar className={classes.avatar}>\r\n                {type ? type[0] : title[0]}\r\n              </Avatar>\r\n            ) : (\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                variant=\"circle\"\r\n                width={40}\r\n                height={40}\r\n              />\r\n            )\r\n          }\r\n          title={\r\n            !isLoad ? (\r\n              title\r\n            ) : (\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                height={10}\r\n                width=\"80%\"\r\n                style={{ marginBottom: 6 }}\r\n              />\r\n            )\r\n          }\r\n          subheader={\r\n            !isLoad ? (\r\n              subTitle\r\n            ) : (\r\n              <Skeleton animation=\"wave\" height={10} width=\"40%\" />\r\n            )\r\n          }\r\n          className=\"text-capitalize\"\r\n        />\r\n        {!isLoad ? (\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={\r\n              itemType === \"reward\"\r\n                ? \"./images/rewards/\" + image\r\n                : \"./images/activities/\" + image\r\n            }\r\n            width=\"100px\"\r\n          />\r\n        ) : (\r\n          <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media} />\r\n        )}\r\n        <CardContent>\r\n          {!isLoad ? (\r\n            <p>{detail}</p>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                height={10}\r\n                style={{ marginBottom: 6 }}\r\n              />\r\n              <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n            </React.Fragment>\r\n          )}\r\n        </CardContent>\r\n        {!isLoad ? (\r\n          <CardActions disableSpacing>\r\n            <div className=\"mr-auto\">\r\n              <div>\r\n                {coin === \"heart\" ? (\r\n                  <FavoriteIcon color=\"secondary\" />\r\n                ) : (\r\n                  <MonetizationOnIcon className=\"colorCoin\" />\r\n                )}\r\n                {\" \" + price + \" \" + coin + \"s\"}\r\n              </div>\r\n              {itemType === \"reward\" ? (\r\n                <div>\r\n                  <StoreIcon className=\"colorDefault\" /> {amount + \" pcs.\"}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <EventIcon className=\"colorDefault\" /> {\"Before \" + limitDate}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"ml-auto\">\r\n              <IconButton onClick={handleButtonClick}>\r\n                {itemType === \"reward\" ? (\r\n                  <RedeemIcon fontSize=\"large\" className=\"colorDefault2\" />\r\n                ) : (\r\n                  <EventNoteIcon fontSize=\"large\" className=\"colorDefault2\" />\r\n                )}\r\n              </IconButton>\r\n            </div>\r\n          </CardActions>\r\n        ) : (\r\n          <CardActions disableSpacing>\r\n            <div className=\"mr-auto\">\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n                width={200}\r\n                height={60}\r\n              />\r\n            </div>\r\n            <div className=\"ml-auto\">\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                variant=\"circle\"\r\n                width={40}\r\n                height={40}\r\n              />\r\n            </div>\r\n          </CardActions>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\n// Conponents\r\nimport ItemList from \"./../../ItemPlace/ItemList\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\n// Icons\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport MonetizationOnRoundedIcon from \"@material-ui/icons/MonetizationOnRounded\";\r\nimport MonetizationOnOutlinedIcon from \"@material-ui/icons/MonetizationOnOutlined\";\r\n\r\n// Backdrop and Notification\r\nimport ToggleBackdrop from \"./../../ToggleBackdrop/ToggleBackdrop\";\r\n// import { useSnackbar } from \"notistack\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nexport default function RewardPlace() {\r\n  // Backdrop and Notification\r\n  const ref = useRef(null);\r\n  // const { enqueueSnackbar } = useSnackbar();\r\n  // const [status, setStatus] = useState(false);\r\n  // end Backdrop and Notification\r\n\r\n  // Process handler\r\n  const queryReward = async () => {\r\n    await ref.current.sleep(2000);\r\n    setRewards([\r\n      {\r\n        id: 1,\r\n        type: \"ticket\",\r\n        title: \"ticket\",\r\n        expiryDate: \"23/03/2020\",\r\n        image: \"ticket.jpg\",\r\n        detail: \"ticket's detail\",\r\n        price: 5,\r\n        coin: \"gold\",\r\n        amount: 100\r\n      },\r\n      {\r\n        id: 2,\r\n        type: \"phone\",\r\n        title: \"xiaomi\",\r\n        expiryDate: \"23/04/2020\",\r\n        image: \"mobile.jpg\",\r\n        detail: \"phone's detail\",\r\n        price: 15,\r\n        coin: \"heart\",\r\n        amount: 9\r\n      },\r\n      {\r\n        id: 3,\r\n        type: \"computer\",\r\n        title: \"acer\",\r\n        expiryDate: \"31/12/2020\",\r\n        image: \"computer.jpg\",\r\n        detail: \"computer's detail\",\r\n        price: 50,\r\n        coin: \"gold\",\r\n        amount: 2\r\n      },\r\n      {\r\n        id: 4,\r\n        type: \"voucher\",\r\n        title: \"central\",\r\n        expiryDate: \"31/12/2020\",\r\n        image: \"central.jpg\",\r\n        detail: \"voucher's detail\",\r\n        price: 10,\r\n        coin: \"heart\",\r\n        amount: 7\r\n      },\r\n      {\r\n        id: 5,\r\n        type: \"television\",\r\n        title: \"sony tv\",\r\n        expiryDate: \"31/12/2020\",\r\n        image: \"tv.jpg\",\r\n        detail: \"television's detail\",\r\n        price: 100,\r\n        coin: \"heart\",\r\n        amount: 5\r\n      },\r\n      {\r\n        id: 6,\r\n        type: \"bag\",\r\n        title: \"bag\",\r\n        expiryDate: \"31/12/2020\",\r\n        image: \"bag.jpg\",\r\n        detail: \"bag's detail\",\r\n        price: 20,\r\n        coin: \"gold\",\r\n        amount: 99\r\n      },\r\n      {\r\n        id: 7,\r\n        type: \"voucher\",\r\n        title: \"air asia\",\r\n        expiryDate: \"31/12/2020\",\r\n        image: \"plane.jpg\",\r\n        detail: \"voucher's detail\",\r\n        price: 50,\r\n        coin: \"heart\",\r\n        amount: 99\r\n      },\r\n      {\r\n        id: 8,\r\n        type: \"voucher\",\r\n        title: \"food panda\",\r\n        expiryDate: \"31/12/2020\",\r\n        image: \"foodpanda.png\",\r\n        detail: \"voucher's detail\",\r\n        price: 5,\r\n        coin: \"gold\",\r\n        amount: 99\r\n      }\r\n    ]);\r\n    // setStatus(true);\r\n  };\r\n\r\n  // const updateWalletAndReward = async () => {\r\n  //   // Toggle Backdrop\r\n  //   ref.current.toggleBackdrop();\r\n  //   // Process\r\n  //   await ref.current.sleep(2000);\r\n  //   error = false;\r\n  //   // Toggle Backdrop and show notification\r\n  //   ref.current.toggleBackdrop();\r\n  //   if (!error) {\r\n  //     enqueueSnackbar(\"Redeem successful\", {\r\n  //       variant: \"success\"\r\n  //     });\r\n  //   } else {\r\n  //     enqueueSnackbar(\"Something went wrong!\", {\r\n  //       variant: \"error\"\r\n  //     });\r\n  //   }\r\n\r\n  //   queryReward();\r\n  // };\r\n  // end Process handler\r\n\r\n  // Useful States\r\n\r\n  // const [wallet, setWallet] = useState({\r\n  //   // Sort wallet id by coin id ASC\r\n  //   walletID: [1, 2],\r\n  //   coinID: [1, 2],\r\n  //   balance: [120, 65]\r\n  // });\r\n\r\n  // const [state, setState] = useState({\r\n  //   showContent: false,\r\n  //   id: null,\r\n  //   title: null,\r\n  //   expiryDate: null,\r\n  //   image: null,\r\n  //   price: null,\r\n  //   coinID: null,\r\n  //   coin: null,\r\n  //   amount: null\r\n  // });\r\n\r\n  const [rewards, setRewards] = useState(null);\r\n\r\n  const [filter, setFilter] = useState({\r\n    heart: true,\r\n    gold: true\r\n  });\r\n\r\n  const [page, setPage] = React.useState(1);\r\n  // end Useful States\r\n\r\n  // Useful Handler\r\n  // const handleChange = (\r\n  //   showContentStatus,\r\n  //   id,\r\n  //   title,\r\n  //   expiryDate,\r\n  //   image,\r\n  //   price,\r\n  //   coinID,\r\n  //   coin,\r\n  //   amount\r\n  // ) => {\r\n  //   setState({\r\n  //     showContent: showContentStatus,\r\n  //     id: id,\r\n  //     title: title,\r\n  //     expiryDate: expiryDate,\r\n  //     image: image,\r\n  //     price: price,\r\n  //     coinID: coinID,\r\n  //     coin: coin,\r\n  //     amount: amount\r\n  //   });\r\n  // };\r\n\r\n  const handleChoose = value => e => {\r\n    setFilter({ ...filter, [value]: e.target.checked });\r\n  };\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  // Useful Handler\r\n\r\n  // Onload\r\n  useEffect(() => {\r\n    queryReward();\r\n  }, []);\r\n  // end Onload\r\n\r\n  // useEffect(() => {\r\n  //   if (statusSubmit !== null) {\r\n  //     updateWalletAndReward();\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     setStatusSubmit(null);\r\n  //   };\r\n  // }, [statusSubmit]);\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-12 d-flex justify-content-end pb-1\">\r\n            {rewards ? (\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      icon={<FavoriteBorder />}\r\n                      checkedIcon={<Favorite color=\"secondary\" />}\r\n                      checked={filter.heart}\r\n                      onChange={handleChoose(\"heart\")}\r\n                    />\r\n                  }\r\n                  label=\"Heart\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      icon={<MonetizationOnOutlinedIcon />}\r\n                      checkedIcon={\r\n                        <MonetizationOnRoundedIcon className=\"colorCoin\" />\r\n                      }\r\n                      checked={filter.gold}\r\n                      onChange={handleChoose(\"gold\")}\r\n                    />\r\n                  }\r\n                  label=\"Gold\"\r\n                />\r\n              </FormGroup>\r\n            ) : (\r\n              <Skeleton\r\n                variant=\"rect\"\r\n                width=\"100%\"\r\n                height={50}\r\n                animation=\"wave\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center px-4\">\r\n          {rewards\r\n            ? rewards.map(value => {\r\n                return filter.heart && filter.gold ? (\r\n                  <ItemList\r\n                    key={value.id}\r\n                    itemType=\"reward\"\r\n                    id={value.id}\r\n                    type={value.type}\r\n                    title={value.title}\r\n                    subTitle={\"Exp: \" + value.expiryDate}\r\n                    image={value.image}\r\n                    detail={value.detail}\r\n                    price={value.price}\r\n                    coin={value.coin}\r\n                    amount={value.amount}\r\n                  />\r\n                ) : filter.heart && value.coin === \"heart\" ? (\r\n                  <ItemList\r\n                    key={value.id}\r\n                    itemType=\"reward\"\r\n                    id={value.id}\r\n                    type={value.type}\r\n                    title={value.title}\r\n                    subTitle={\"Exp: \" + value.expiryDate}\r\n                    image={value.image}\r\n                    detail={value.detail}\r\n                    price={value.price}\r\n                    coin={value.coin}\r\n                    amount={value.amount}\r\n                  />\r\n                ) : filter.gold && value.coin === \"gold\" ? (\r\n                  <ItemList\r\n                    key={value.id}\r\n                    itemType=\"reward\"\r\n                    id={value.id}\r\n                    type={value.type}\r\n                    title={value.title}\r\n                    subTitle={\"Exp: \" + value.expiryDate}\r\n                    image={value.image}\r\n                    detail={value.detail}\r\n                    price={value.price}\r\n                    coin={value.coin}\r\n                    amount={value.amount}\r\n                  />\r\n                ) : null;\r\n              })\r\n            : Array.from({ length: 12 }, (v, i) => i).map(value => {\r\n                return <ItemList key={value} isLoad={true} />;\r\n              })}\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center p-3\">\r\n          <Pagination count={10} page={page} onChange={handlePageChange} />\r\n        </div>\r\n\r\n        <ToggleBackdrop ref={ref} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\n// Conponents\r\nimport ItemList from \"./../../ItemPlace/ItemList\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\n// Icons\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport MonetizationOnRoundedIcon from \"@material-ui/icons/MonetizationOnRounded\";\r\nimport MonetizationOnOutlinedIcon from \"@material-ui/icons/MonetizationOnOutlined\";\r\n\r\n// Backdrop and Notification\r\nimport ToggleBackdrop from \"./../../ToggleBackdrop/ToggleBackdrop\";\r\n// import { useSnackbar } from \"notistack\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nexport default function ActivityPlace() {\r\n  // Backdrop and Notification\r\n  const ref = useRef(null);\r\n  // const { enqueueSnackbar } = useSnackbar();\r\n  // const [status, setStatus] = useState(false);\r\n  // end Backdrop and Notification\r\n\r\n  // Process handler\r\n  const queryActivity = async () => {\r\n    await ref.current.sleep(2000);\r\n    setActivities([\r\n      {\r\n        id: 1,\r\n        title: \"Songkran\",\r\n        date: \"23/03/2020\",\r\n        image: \"songkran.jpg\",\r\n        detail: \"Songkran's detail\",\r\n        place: \"Rayong\",\r\n        price: 5,\r\n        coin: \"gold\",\r\n        limitDate: \"20/03/2020\"\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"Planting\",\r\n        date: \"23/04/2020\",\r\n        image: \"planting.jpg\",\r\n        detail: \"Planting's detail\",\r\n        place: \"Rayong\",\r\n        price: 15,\r\n        coin: \"gold\",\r\n        limitDate: \"20/04/2020\"\r\n      },\r\n      {\r\n        id: 3,\r\n        title: \"Running\",\r\n        date: \"07/04/2020\",\r\n        image: \"run.jpg\",\r\n        detail: \"Running's detail\",\r\n        place: \"Rayong\",\r\n        price: 10,\r\n        coin: \"gold\",\r\n        limitDate: \"04/04/2020\"\r\n      },\r\n      {\r\n        id: 4,\r\n        title: \"Library building\",\r\n        date: \"15/08/2020\",\r\n        image: \"school.jpg\",\r\n        detail: \"Library building's detail\",\r\n        place: \"Rayong\",\r\n        price: 15,\r\n        coin: \"gold\",\r\n        limitDate: \"10/08/2020\"\r\n      },\r\n      {\r\n        id: 5,\r\n        title: \"Home's Fish\",\r\n        date: \"23/03/2020\",\r\n        image: \"fish.jpg\",\r\n        detail: \"Home fish's detail\",\r\n        place: \"Pattaya\",\r\n        price: 20,\r\n        coin: \"gold\",\r\n        limitDate: \"20/03/2020\"\r\n      },\r\n      {\r\n        id: 6,\r\n        title: \"Home's Fish\",\r\n        date: \"23/08/2020\",\r\n        image: \"fish2.jpg\",\r\n        detail: \"Home fish's detail\",\r\n        place: \"Pattaya\",\r\n        price: 20,\r\n        coin: \"gold\",\r\n        limitDate: \"20/07/2020\"\r\n      }\r\n    ]);\r\n    // setStatus(true);\r\n  };\r\n\r\n  // const updateWalletAndReward = async () => {\r\n  //   // Toggle Backdrop\r\n  //   ref.current.toggleBackdrop();\r\n  //   // Process\r\n  //   await ref.current.sleep(2000);\r\n  //   error = false;\r\n  //   // Toggle Backdrop and show notification\r\n  //   ref.current.toggleBackdrop();\r\n  //   if (!error) {\r\n  //     enqueueSnackbar(\"Redeem successful\", {\r\n  //       variant: \"success\"\r\n  //     });\r\n  //   } else {\r\n  //     enqueueSnackbar(\"Something went wrong!\", {\r\n  //       variant: \"error\"\r\n  //     });\r\n  //   }\r\n\r\n  //   queryActivity();\r\n  // };\r\n  // end Process handler\r\n\r\n  // Useful States\r\n\r\n  // const [wallet, setWallet] = useState({\r\n  //   // Sort wallet id by coin id ASC\r\n  //   walletID: [1, 2],\r\n  //   coinID: [1, 2],\r\n  //   balance: [120, 65]\r\n  // });\r\n\r\n  // const [state, setState] = useState({\r\n  //   showContent: false,\r\n  //   id: null,\r\n  //   title: null,\r\n  //   date: null,\r\n  //   image: null,\r\n  //   price: null,\r\n  //   coinID: null,\r\n  //   coin: null,\r\n  //   amount: null\r\n  // });\r\n\r\n  const [activities, setActivities] = useState(null);\r\n\r\n  const [filter, setFilter] = useState({\r\n    heart: true,\r\n    gold: true\r\n  });\r\n\r\n  const [page, setPage] = React.useState(1);\r\n  // end Useful States\r\n\r\n  // Useful Handler\r\n  // const handleChange = (\r\n  //   showContentStatus,\r\n  //   id,\r\n  //   title,\r\n  //   date,\r\n  //   image,\r\n  //   price,\r\n  //   coinID,\r\n  //   coin,\r\n  //   amount\r\n  // ) => {\r\n  //   setState({\r\n  //     showContent: showContentStatus,\r\n  //     id: id,\r\n  //     title: title,\r\n  //     date: date,\r\n  //     image: image,\r\n  //     price: price,\r\n  //     coinID: coinID,\r\n  //     coin: coin,\r\n  //     amount: amount\r\n  //   });\r\n  // };\r\n\r\n  const handleChoose = value => e => {\r\n    setFilter({ ...filter, [value]: e.target.checked });\r\n  };\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  // Useful Handler\r\n\r\n  // Onload\r\n  useEffect(() => {\r\n    queryActivity();\r\n  }, []);\r\n  // end Onload\r\n\r\n  // useEffect(() => {\r\n  //   if (statusSubmit !== null) {\r\n  //     updateWalletAndReward();\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     setStatusSubmit(null);\r\n  //   };\r\n  // }, [statusSubmit]);\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-12 d-flex justify-content-end pb-1\">\r\n            {activities ? (\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      icon={<FavoriteBorder />}\r\n                      checkedIcon={<Favorite color=\"secondary\" />}\r\n                      checked={filter.heart}\r\n                      onChange={handleChoose(\"heart\")}\r\n                    />\r\n                  }\r\n                  label=\"Heart\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      icon={<MonetizationOnOutlinedIcon />}\r\n                      checkedIcon={\r\n                        <MonetizationOnRoundedIcon className=\"colorCoin\" />\r\n                      }\r\n                      checked={filter.gold}\r\n                      onChange={handleChoose(\"gold\")}\r\n                    />\r\n                  }\r\n                  label=\"Gold\"\r\n                />\r\n              </FormGroup>\r\n            ) : (\r\n              <Skeleton\r\n                variant=\"rect\"\r\n                width=\"100%\"\r\n                height={50}\r\n                animation=\"wave\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center px-4\">\r\n          {activities\r\n            ? activities.map(value => {\r\n                return filter.heart && filter.gold ? (\r\n                  <ItemList\r\n                    key={value.id}\r\n                    itemType=\"activity\"\r\n                    id={value.id}\r\n                    title={value.title}\r\n                    subTitle={value.date}\r\n                    image={value.image}\r\n                    detail={value.detail}\r\n                    price={value.price}\r\n                    coin={value.coin}\r\n                    limitDate={value.limitDate}\r\n                  />\r\n                ) : filter.heart && value.coin === \"heart\" ? (\r\n                  <ItemList\r\n                    key={value.id}\r\n                    itemType=\"activity\"\r\n                    id={value.id}\r\n                    title={value.title}\r\n                    subTitle={value.date}\r\n                    image={value.image}\r\n                    detail={value.detail}\r\n                    price={value.price}\r\n                    coin={value.coin}\r\n                    limitDate={value.limitDate}\r\n                  />\r\n                ) : filter.gold && value.coin === \"gold\" ? (\r\n                  <ItemList\r\n                    key={value.id}\r\n                    itemType=\"activity\"\r\n                    id={value.id}\r\n                    title={value.title}\r\n                    subTitle={value.date}\r\n                    image={value.image}\r\n                    detail={value.detail}\r\n                    price={value.price}\r\n                    coin={value.coin}\r\n                    limitDate={value.limitDate}\r\n                  />\r\n                ) : null;\r\n              })\r\n            : Array.from({ length: 12 }, (v, i) => i).map(value => {\r\n                return <ItemList key={value} isLoad={true} />;\r\n              })}\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center p-3\">\r\n          <Pagination count={10} page={page} onChange={handlePageChange} />\r\n        </div>\r\n\r\n        <ToggleBackdrop ref={ref} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\n// Components\r\nimport { TransactionTable } from \"./../../TransactionTable/TransactionTable\";\r\n\r\n// Icon\r\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\r\n\r\n// Backdrop and Notification\r\nimport ToggleBackdrop from \"./../../ToggleBackdrop/ToggleBackdrop\";\r\n\r\nexport default function RedeemTransaction() {\r\n  // Backdrop and Notification\r\n  const ref = useRef(null);\r\n  const [status, setStatus] = useState(false);\r\n  // end Backdrop and Notification\r\n\r\n  // Process handler\r\n  const queryRedeem = async () => {\r\n    // Process\r\n    // await ref.current.sleep(2000);\r\n    setTransaction({\r\n      columns: [\r\n        { title: \"Reward\", field: \"reward\" },\r\n        { title: \"Amount\", field: \"amount\" },\r\n        { title: \"Price\", field: \"price\" },\r\n        { title: \"Status\", field: \"status\" },\r\n        { title: \"Date\", field: \"date\" }\r\n      ],\r\n      data: [\r\n        {\r\n          redeemID: \"1\",\r\n          reward: \"Phone\",\r\n          amount: \"1\",\r\n          price: \"29 Silvers\",\r\n          status: \"Pending\",\r\n          date: \"15/03/2020 12:20:20\",\r\n          detail: \"Pending...\"\r\n        },\r\n        {\r\n          redeemID: \"2\",\r\n          reward: \"Computer\",\r\n          amount: \"1\",\r\n          price: \"100 Golds\",\r\n          status: \"Status\",\r\n          date: \"10/02/2020 17:23:32\",\r\n          detail: \"Approve by Kane\"\r\n        }\r\n      ]\r\n    });\r\n    // setStatus(true);\r\n  };\r\n  // end Process handler\r\n\r\n  //Useful States\r\n  const [transaction, setTransaction] = useState(null);\r\n  // end Useful States\r\n\r\n  // Onload\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryRedeem();\r\n    }, 1000);\r\n  }, []);\r\n  // end Onload\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-12\">\r\n            {transaction ? (\r\n              <TransactionTable\r\n                icon={\r\n                  <CardGiftcardIcon\r\n                    className=\"colorDefault2\"\r\n                    fontSize=\"large\"\r\n                  />\r\n                }\r\n                title=\"My Redemption\"\r\n                transaction={transaction}\r\n                showDetail={true}\r\n                error=\"No transaction !\"\r\n              />\r\n            ) : (\r\n              <TransactionTable />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ToggleBackdrop ref={ref} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\n// Components\r\nimport { TransactionTable } from \"./../../TransactionTable/TransactionTable\";\r\n\r\n// Icon\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\n\r\n// Backdrop and Notification\r\nimport ToggleBackdrop from \"./../../ToggleBackdrop/ToggleBackdrop\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nexport default function ActivityTransaction() {\r\n  // Backdrop and Notification\r\n  const ref = useRef(null);\r\n  const [status, setStatus] = useState(false);\r\n  // end Backdrop and Notification\r\n\r\n  // Process handler\r\n  const queryActivityTransaction = async () => {\r\n    // Process\r\n    await ref.current.sleep(2000);\r\n    setTransaction({\r\n      columns: [\r\n        { title: \"Activity\", field: \"activity\" },\r\n        { title: \"Place\", field: \"place\" },\r\n        { title: \"Date\", field: \"date\" },\r\n        { title: \"Reward\", field: \"reward\" },\r\n        { title: \"Applied Date\", field: \"applyDate\" },\r\n        { title: \"Status\", field: \"status\" }\r\n      ],\r\n      data: [\r\n        {\r\n          activityID: \"1\",\r\n          activity: \"Planting\",\r\n          place: \"Rayong\",\r\n          date: \"20/04/2020\",\r\n          reward: \"50 Hearts\",\r\n          applyDate: \"26/03/2020\",\r\n          status: \"waiting\"\r\n        },\r\n        {\r\n          activityID: \"2\",\r\n          activity: \"Songkran\",\r\n          place: \"Surat Thani\",\r\n          date: \"13/04/2020\",\r\n          reward: \"100 Hearts\",\r\n          applyDate: \"04/03/2020\",\r\n          status: \"joined\"\r\n        }\r\n      ]\r\n    });\r\n    setStatus(true);\r\n  };\r\n  // end Process handler\r\n\r\n  //Useful States\r\n  const [transaction, setTransaction] = useState({\r\n    title: null,\r\n    columns: null,\r\n    data: null\r\n  });\r\n  // end Useful States\r\n\r\n  // Onload\r\n  useEffect(() => {\r\n    queryActivityTransaction();\r\n  }, []);\r\n  // end Onload\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-12\">\r\n            {status ? (\r\n              <TransactionTable\r\n                icon={\r\n                  <EventNoteIcon className=\"colorDefault2\" fontSize=\"large\" />\r\n                }\r\n                title=\"My Activity\"\r\n                transaction={transaction}\r\n                error=\"No transaction !\"\r\n              />\r\n            ) : (\r\n              <TransactionTable />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ToggleBackdrop ref={ref} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\n// Components\r\nimport {\r\n  TransactionTable,\r\n  TransactionManagerTable\r\n} from \"./../../TransactionTable/TransactionTable\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\n// Icons\r\nimport RotateRightIcon from \"@material-ui/icons/RotateRight\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\n\r\n// Backdrop and Notification\r\nimport ToggleBackdrop from \"./../../ToggleBackdrop/ToggleBackdrop\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\n// Backdrop and Notification\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nexport default function TransferTransaction({ loginAuth }) {\r\n  // Backdrop and Notification\r\n  const ref = useRef(null);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [status, setStatus] = useState(false);\r\n  // end Backdrop and Notification\r\n\r\n  // Useful States\r\n  const [transaction, setTransaction] = useState(null);\r\n\r\n  const [transactionSuccess, setTransactionSuccess] = useState(null);\r\n\r\n  const [successfulTransaction, setSuccessfulTransaction] = useState(false);\r\n  // end Useful States\r\n\r\n  // Useful handlers\r\n  const handleChangeTransacation = () => {\r\n    setSuccessfulTransaction(!successfulTransaction);\r\n  };\r\n  // end Useful handlers\r\n\r\n  // Process handler\r\n  const handleApprove = async (e, rowData) => {\r\n    if (window.confirm(rowData.transactionID)) {\r\n      // Toggle Backdrop\r\n      ref.current.toggleBackdrop();\r\n      // Process\r\n      await ref.current.sleep(2000);\r\n      console.log(\"Successful : \", JSON.stringify(rowData));\r\n      setStatus(!status);\r\n      // Toggle Backdrop and show notification\r\n      ref.current.toggleBackdrop();\r\n      if (status) {\r\n        enqueueSnackbar(\"Update successful\", {\r\n          variant: \"success\"\r\n        });\r\n      } else {\r\n        enqueueSnackbar(\"Something went wrong!\", {\r\n          variant: \"error\"\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReject = async (e, rowData) => {\r\n    if (window.confirm(rowData.transactionID)) {\r\n      // Toggle Backdrop\r\n      ref.current.toggleBackdrop();\r\n      // Process\r\n      await ref.current.sleep(2000);\r\n      console.log(\"Reject : \", JSON.stringify(rowData));\r\n      setStatus(!status);\r\n      // Toggle Backdrop and show notification\r\n      ref.current.toggleBackdrop();\r\n      if (status) {\r\n        enqueueSnackbar(\"Update successful\", {\r\n          variant: \"success\"\r\n        });\r\n      } else {\r\n        enqueueSnackbar(\"Something went wrong!\", {\r\n          variant: \"error\"\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // Process handler\r\n\r\n  const queryTrnsfer = () => {\r\n    setTransaction({\r\n      columns: [\r\n        { title: \"Sender\", field: \"sender\" },\r\n        { title: \"Reciever\", field: \"reciever\" },\r\n        { title: \"Amount\", field: \"amount\" },\r\n        { title: \"Date\", field: \"date\" }\r\n      ],\r\n      data: [\r\n        {\r\n          transactionID: 8,\r\n          sender: \"Zainab\",\r\n          reciever: \"Eve\",\r\n          amount: \"5 Hearts\",\r\n          date: \"27/03/2020 13:56:32\",\r\n          detail: \"Reason Detail\"\r\n        },\r\n        {\r\n          transactionID: 9,\r\n          sender: \"Kiara\",\r\n          reciever: \"Susan\",\r\n          amount: \"5 Hearts\",\r\n          date: \"26/03/2020 17:20:20\",\r\n          detail: \"Reason Detail\"\r\n        }\r\n      ]\r\n    });\r\n\r\n    setTransactionSuccess({\r\n      title: \"Successful Transfer Transaction\",\r\n      columns: [\r\n        { title: \"Sender\", field: \"sender\" },\r\n        { title: \"Reciever\", field: \"reciever\" },\r\n        { title: \"Amount\", field: \"amount\" },\r\n        { title: \"Date\", field: \"date\" },\r\n        { title: \"Approved by\", field: \"inspector\" }\r\n      ],\r\n      data: [\r\n        {\r\n          transactionID: 1,\r\n          sender: \"Darcie\",\r\n          reciever: \"Kye\",\r\n          amount: \"6 Hearts\",\r\n          date: \"25/03/2020 19:03:59\",\r\n          inspector: \"Kane\",\r\n          detail: \"Reason Detail\"\r\n        },\r\n        {\r\n          transactionID: 2,\r\n          sender: \"Molly\",\r\n          reciever: \"Eila\",\r\n          amount: \"2 Hearts\",\r\n          date: \"22/03/2020 13:03:29\",\r\n          inspector: \"Kane\",\r\n          detail: \"Reason Detail\"\r\n        },\r\n        {\r\n          transactionID: 3,\r\n          sender: \"Tina\",\r\n          reciever: \"Christina\",\r\n          amount: \"2 Hearts\",\r\n          date: \"22/03/2020 12:54:23\",\r\n          inspector: \"Kane\",\r\n          detail: \"Reason Detail\"\r\n        },\r\n        {\r\n          transactionID: 4,\r\n          sender: \"Evie\",\r\n          reciever: \"Penelope\",\r\n          amount: \"3 Hearts\",\r\n          date: \"20/03/2020 08:20:08\",\r\n          inspector: \"Kane\",\r\n          detail: \"Reason Detail\"\r\n        },\r\n        {\r\n          transactionID: 5,\r\n          sender: \"Salma\",\r\n          reciever: \"Emmie\",\r\n          amount: \"10 Hearts\",\r\n          date: \"15/03/2020 15:09:11\",\r\n          inspector: \"Kane\",\r\n          detail: \"Reason Detail\"\r\n        },\r\n        {\r\n          transactionID: 6,\r\n          sender: \"Willie\",\r\n          reciever: \"Belle\",\r\n          amount: \"2 Hearts\",\r\n          date: \"12/03/2020 16:32:12\",\r\n          inspector: \"Kane\",\r\n          detail: \"Reason Detail\"\r\n        },\r\n        {\r\n          transactionID: 7,\r\n          sender: \"Phoebe\",\r\n          reciever: \"Yasmin\",\r\n          amount: \"3 Hearts\",\r\n          date: \"12/03/2020 12:20:20\",\r\n          inspector: \"Eank\",\r\n          detail: \"Reason Detail\"\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryTrnsfer();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-end px-2 pb-2\">\r\n          <div className=\"col-12 text-right\">\r\n            {transaction && transactionSuccess ? (\r\n              <div>\r\n                <label htmlFor=\"switcher\">Pending</label>\r\n                <Switch\r\n                  id=\"switcher\"\r\n                  checked={successfulTransaction}\r\n                  onChange={handleChangeTransacation}\r\n                  value=\"successfulTransaction\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n                <label htmlFor=\"switcher\">Successful</label>\r\n              </div>\r\n            ) : (\r\n              <Skeleton\r\n                variant=\"rect\"\r\n                width=\"100%\"\r\n                height={50}\r\n                animation=\"wave\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-12\">\r\n            {transaction && transactionSuccess ? (\r\n              !successfulTransaction ? (\r\n                loginAuth.isAuthenticated === \"2\" ? (\r\n                  <TransactionManagerTable\r\n                    icon={\r\n                      <RotateRightIcon\r\n                        className=\"colorDefault2\"\r\n                        fontSize=\"large\"\r\n                      />\r\n                    }\r\n                    title={\"Pending Transfer\"}\r\n                    transaction={transaction}\r\n                    handleApprove={handleApprove}\r\n                    handleReject={handleReject}\r\n                    showDetail={true}\r\n                    error=\"No transaction !\"\r\n                  />\r\n                ) : (\r\n                  <TransactionTable\r\n                    icon={\r\n                      <RotateRightIcon\r\n                        className=\"colorDefault2\"\r\n                        fontSize=\"large\"\r\n                      />\r\n                    }\r\n                    title=\"Pending Transfer\"\r\n                    transaction={transaction}\r\n                    showDetail={true}\r\n                    error=\"No transaction !\"\r\n                  />\r\n                )\r\n              ) : (\r\n                <TransactionTable\r\n                  icon={\r\n                    <UpdateIcon className=\"colorDefault2\" fontSize=\"large\" />\r\n                  }\r\n                  title=\"Successful Transfer\"\r\n                  transaction={transactionSuccess}\r\n                  showDetail={true}\r\n                  error=\"No transaction !\"\r\n                />\r\n              )\r\n            ) : (\r\n              <TransactionTable />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ToggleBackdrop ref={ref} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\n//Components\r\nimport {\r\n  TransactionTable,\r\n  TransactionManagerTable\r\n} from \"./../../TransactionTable/TransactionTable\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\n// Icons\r\nimport RotateRightIcon from \"@material-ui/icons/RotateRight\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\n\r\n// Backdrop and Notification\r\nimport ToggleBackdrop from \"./../../ToggleBackdrop/ToggleBackdrop\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\n// Backdrop and Notification\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nexport default function RedeemTransaction() {\r\n  // Backdrop and Notification\r\n  const ref = useRef(null);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [status, setStatus] = useState(false);\r\n  // end Backdrop and Notification\r\n\r\n  // Useful States\r\n  const [transaction, setTransaction] = useState(null);\r\n\r\n  const [transactionSuccess, setTransactionSuccess] = useState(null);\r\n\r\n  const [successfulTransaction, setSuccessfulTransaction] = useState(false);\r\n  // end Useful States\r\n\r\n  // Useful Handlers\r\n  const handleChangeTransacation = () => {\r\n    setSuccessfulTransaction(!successfulTransaction);\r\n  };\r\n  // end Usefull Handles\r\n\r\n  // Process handler\r\n  const handleApprove = async (e, rowData) => {\r\n    if (window.confirm(rowData.redeemID)) {\r\n      // Toggle Backdrop\r\n      ref.current.toggleBackdrop();\r\n      // Process\r\n      await ref.current.sleep(2000);\r\n      console.log(\"Successful : \", JSON.stringify(rowData));\r\n      setStatus(!status);\r\n      // Toggle Backdrop and show notification\r\n      ref.current.toggleBackdrop();\r\n      if (status) {\r\n        enqueueSnackbar(\"Update successful\", {\r\n          variant: \"success\"\r\n        });\r\n      } else {\r\n        enqueueSnackbar(\"Something went wrong!\", {\r\n          variant: \"error\"\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReject = async (e, rowData) => {\r\n    if (window.confirm(rowData.redeemID)) {\r\n      // Toggle Backdrop\r\n      ref.current.toggleBackdrop();\r\n      // Process\r\n      await ref.current.sleep(2000);\r\n      console.log(\"Reject : \", JSON.stringify(rowData));\r\n      setStatus(!status);\r\n      // Toggle Backdrop and show notification\r\n      ref.current.toggleBackdrop();\r\n      if (status) {\r\n        enqueueSnackbar(\"Update successful\", {\r\n          variant: \"success\"\r\n        });\r\n      } else {\r\n        enqueueSnackbar(\"Something went wrong!\", {\r\n          variant: \"error\"\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // end Process handler\r\n\r\n  const queryRedeem = () => {\r\n    setTransaction({\r\n      title: \"Pending Reward Transaction\",\r\n      columns: [\r\n        { title: \"Member\", field: \"member\" },\r\n        { title: \"Reward\", field: \"reward\" },\r\n        { title: \"Amount\", field: \"amount\" },\r\n        { title: \"Price\", field: \"price\" },\r\n        { title: \"Date\", field: \"date\" }\r\n      ],\r\n      data: [\r\n        {\r\n          redeemID: 1,\r\n          member: \"Kane\",\r\n          reward: \"Phone\",\r\n          amount: 1,\r\n          price: \"29 Silvers\",\r\n          date: \"27/03/2020 11:08:33\",\r\n          detail: \"phone's detail\"\r\n        },\r\n        {\r\n          redeemID: 2,\r\n          member: \"Perm\",\r\n          reward: \"Computer\",\r\n          amount: 1,\r\n          price: \"100 Golds\",\r\n          date: \"26/03/2020 14:20:20\",\r\n          detail: \"computer's detail\"\r\n        }\r\n      ]\r\n    });\r\n\r\n    setTransactionSuccess({\r\n      title: \"Successful Redeem Transaction\",\r\n      columns: [\r\n        { title: \"Member\", field: \"member\" },\r\n        { title: \"Reward\", field: \"reward\" },\r\n        { title: \"Amount\", field: \"amount\" },\r\n        { title: \"Price\", field: \"price\" },\r\n        { title: \"Date\", field: \"date\" }\r\n      ],\r\n      data: [\r\n        {\r\n          redeemID: 3,\r\n          member: \"Ice\",\r\n          reward: \"Phone\",\r\n          amount: 1,\r\n          price: \"29 Silvers\",\r\n          date: \"12/03/2020 12:20:20\",\r\n          detail: \"Approve by kane\"\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryRedeem();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-end px-2 pb-2\">\r\n          <div className=\"col-12 text-right\">\r\n            {transaction && transactionSuccess ? (\r\n              <div>\r\n                <label htmlFor=\"switcher\">Pending</label>\r\n                <Switch\r\n                  id=\"switcher\"\r\n                  checked={successfulTransaction}\r\n                  onChange={handleChangeTransacation}\r\n                  value=\"sucessfulTransaction\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n                <label htmlFor=\"switcher\">Successful</label>\r\n              </div>\r\n            ) : (\r\n              <Skeleton\r\n                variant=\"rect\"\r\n                width=\"100%\"\r\n                height={50}\r\n                animation=\"wave\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-12\">\r\n            {transaction && transactionSuccess ? (\r\n              !successfulTransaction ? (\r\n                <TransactionManagerTable\r\n                  icon={\r\n                    <RotateRightIcon\r\n                      className=\"colorDefault2\"\r\n                      fontSize=\"large\"\r\n                    />\r\n                  }\r\n                  title=\"Pending Redemption\"\r\n                  transaction={transaction}\r\n                  handleApprove={handleApprove}\r\n                  handleReject={handleReject}\r\n                  showDetail={true}\r\n                  error=\"No transaction !\"\r\n                />\r\n              ) : (\r\n                <TransactionTable\r\n                  icon={\r\n                    <UpdateIcon className=\"colorDefault2\" fontSize=\"large\" />\r\n                  }\r\n                  title=\"Successful Redemption\"\r\n                  transaction={transactionSuccess}\r\n                  showDetail={true}\r\n                  error=\"No transaction !\"\r\n                />\r\n              )\r\n            ) : (\r\n              <TransactionTable />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ToggleBackdrop ref={ref} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Components\r\nimport MaterialTable from \"material-table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\n// Icon\r\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\r\n\r\n// Backdrop and Notification\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport history from \"./../../../../history\";\r\n\r\nexport default function RewardList() {\r\n  // Useful States\r\n  const [rewards, setRewards] = useState(null);\r\n  // end Useful States\r\n\r\n  const queryRewards = () => {\r\n    setRewards({\r\n      columns: [\r\n        {\r\n          title: \" Reward\",\r\n          field: \"image\",\r\n          render: rowData => (\r\n            <img\r\n              src={\"./../images/rewards/\" + rowData.image}\r\n              width=\"120\"\r\n              alt={rowData.name}\r\n            />\r\n          )\r\n        },\r\n        { title: \"Name\", field: \"name\" },\r\n        { title: \"Detail\", field: \"detail\" },\r\n        { title: \"Price\", field: \"price\" },\r\n        { title: \"Amount\", field: \"amount\" }\r\n      ],\r\n      data: [\r\n        {\r\n          id: 1,\r\n          image: \"mobile.jpg\",\r\n          name: \"Phone\",\r\n          detail: \"Phone's detail\",\r\n          price: \"1 Gold\",\r\n          amount: 10\r\n        },\r\n        {\r\n          id: 2,\r\n          image: \"ticket.jpg\",\r\n          name: \"Major\",\r\n          detail: \"Ticket's detail\",\r\n          price: \"20 Silvers\",\r\n          amount: 98\r\n        },\r\n        {\r\n          id: 3,\r\n          image: \"computer.jpg\",\r\n          name: \"Dell\",\r\n          detail: \"Computer's detail\",\r\n          price: \"25 Golds\",\r\n          amount: 2\r\n        },\r\n        {\r\n          id: 4,\r\n          image: \"central.jpg\",\r\n          name: \"central\",\r\n          detail: \"voucher's detail\",\r\n          price: \"10 hearts\",\r\n          amount: 7\r\n        },\r\n        {\r\n          id: 5,\r\n          image: \"tv.jpg\",\r\n          name: \"sony tv\",\r\n          detail: \"television's detail\",\r\n          price: \"100 hearts\",\r\n          amount: 5\r\n        },\r\n        {\r\n          id: 6,\r\n          image: \"bag.jpg\",\r\n          name: \"bag\",\r\n          detail: \"bag's detail\",\r\n          price: \"20 golds\",\r\n          amount: 99\r\n        },\r\n        {\r\n          id: 7,\r\n          name: \"air asia\",\r\n          image: \"plane.jpg\",\r\n          detail: \"voucher's detail\",\r\n          price: \"50 hearts\",\r\n          amount: 99\r\n        },\r\n        {\r\n          id: 8,\r\n          name: \"food panda\",\r\n          image: \"foodpanda.png\",\r\n          detail: \"voucher's detail\",\r\n          price: \"5 golds\",\r\n          amount: 99\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryRewards();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const handleAddReward = () => {\r\n    history.push(`/manage/reward/add`);\r\n  };\r\n\r\n  const handleEditReward = (e, data) => {\r\n    history.push(`/manage/reward/edit/${data.id}`);\r\n  };\r\n\r\n  const TableTitle = ({ icon, title }) => {\r\n    return (\r\n      <h5 className=\"pt-2\">\r\n        {icon} &nbsp;{title}\r\n      </h5>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-12\">\r\n            {rewards ? (\r\n              <div>\r\n                {window.innerWidth < 720 && (\r\n                  <div className=\"col-12 pt-2 h5\">\r\n                    <FastfoodIcon className=\"colorDefault2\" fontSize=\"large\" />{\" \"}\r\n                    &nbsp;Reward Manager\r\n                  </div>\r\n                )}\r\n\r\n                <TableContainer component={Card} className=\"colorItem\">\r\n                  <MaterialTable\r\n                    title={\r\n                      window.innerWidth > 720 ? (\r\n                        <TableTitle\r\n                          icon={\r\n                            <FastfoodIcon\r\n                              className=\"colorDefault2\"\r\n                              fontSize=\"large\"\r\n                            />\r\n                          }\r\n                          title=\"Reward Manager\"\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )\r\n                    }\r\n                    columns={rewards.columns}\r\n                    data={rewards.data}\r\n                    actions={[\r\n                      {\r\n                        icon: \"edit\",\r\n                        tooltip: \"Edit Reward\",\r\n                        onClick: (e, data) => handleEditReward(e, data)\r\n                      },\r\n                      {\r\n                        icon: \"add\",\r\n                        tooltip: \"Add Reward\",\r\n                        isFreeAction: true,\r\n                        onClick: e => handleAddReward()\r\n                      }\r\n                    ]}\r\n                    options={{\r\n                      actionsColumnIndex: -1,\r\n                      headerStyle: {\r\n                        backgroundColor: \"#f1f3f4\",\r\n                        fontSize: \"105%\",\r\n                        textAlign: \"center\"\r\n                      },\r\n                      cellStyle: {\r\n                        textAlign: \"center\"\r\n                      },\r\n                      pageSizeOptions:\r\n                        window.innerWidth > 1024 ? [5, 10, 20] : [5]\r\n                    }}\r\n                    onRowClick={() => null}\r\n                    localization={{\r\n                      body: {\r\n                        emptyDataSourceMessage: \"No reward !\"\r\n                      }\r\n                    }}\r\n                  />\r\n                </TableContainer>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={50}\r\n                  animation=\"wave\"\r\n                />\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={500}\r\n                  animation=\"wave\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Components\r\nimport MaterialTable from \"material-table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Card from \"@material-ui/core/Card\";\r\n//import ExportApplicant from \"./ExportApplicant\";\r\n\r\n// Incons\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\n//import GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\r\n\r\n// Backdrop and Notification\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport history from \"./../../../../history\";\r\n\r\nexport default function ActivityList() {\r\n  // Useful States\r\n  const [activities, setActivities] = useState(null);\r\n  // const [exportApplicant, setExportApplicant] = useState(null);\r\n  // end Useful States\r\n\r\n  const queryActivities = () => {\r\n    setActivities({\r\n      columns: [\r\n        {\r\n          title: \"Activity\",\r\n          field: \"image\",\r\n          render: rowData => (\r\n            <img\r\n              src={\"./../images/activities/\" + rowData.image}\r\n              width=\"120\"\r\n              alt={rowData.name}\r\n            />\r\n          )\r\n        },\r\n        { title: \"Name\", field: \"name\" },\r\n        { title: \"Detail\", field: \"detail\" },\r\n        { title: \"Place\", field: \"place\" },\r\n        { title: \"Date\", field: \"date\" },\r\n        { title: \"Reward\", field: \"reward\" },\r\n        { title: \"Enroll Date\", field: \"enrollDate\" }\r\n      ],\r\n      data: [\r\n        {\r\n          id: 1,\r\n          image: \"songkran.jpg\",\r\n          name: \"Songkran\",\r\n          detail: \"Songkran's detail\",\r\n          place: \"Rayong\",\r\n          date: \"13/04/2020\",\r\n          reward: \"5 Golds\",\r\n          enrollDate: \"20/03/2020 - 10/04/2020\"\r\n        },\r\n        {\r\n          id: 2,\r\n          image: \"planting.jpg\",\r\n          name: \"Planting\",\r\n          detail: \"Planting's detail\",\r\n          place: \"Surat Thani\",\r\n          date: \"01/05/2020\",\r\n          reward: \"10 Golds\",\r\n          enrollDate: \"16/03/2020 - 01/05/2020\"\r\n        },\r\n        {\r\n          id: 3,\r\n          image: \"run.jpg\",\r\n          name: \"Running\",\r\n          detail: \"Running's detail\",\r\n          place: \"Pattaya\",\r\n          date: \"07/04/2020\",\r\n          reward: \"10 Golds\",\r\n          enrollDate: \"01/03/2020 - 04/04/2020\"\r\n        },\r\n        {\r\n          id: 4,\r\n          image: \"school.jpg\",\r\n          name: \"Library building\",\r\n          detail: \"Library building's detail\",\r\n          place: \"Rayong\",\r\n          date: \"15/08/2020\",\r\n          reward: \"15 Hearts\",\r\n          enrollDate: \"25/03/2020 - 10/08/2020\"\r\n        },\r\n        {\r\n          id: 5,\r\n          image: \"fish.jpg\",\r\n          name: \"Home's Fish\",\r\n          detail: \"Home fish's detail\",\r\n          place: \"Rayong\",\r\n          date: \"23/03/2020\",\r\n          reward: \"20 Hearts\",\r\n          enrollDate: \"01/02/2020 - 20/03/2020\"\r\n        },\r\n        {\r\n          id: 6,\r\n          image: \"fish2.jpg\",\r\n          name: \"Home's Fish\",\r\n          detail: \"Home fish's detail\",\r\n          place: \"Pattaya\",\r\n          date: \"23/08/2020\",\r\n          reward: \"20 Hearts\",\r\n          enrollDate: \"20/03/2020 - 20/07/2020\"\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      queryActivities();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const handleAddActivity = () => {\r\n    history.push(`/manage/activity/add`);\r\n  };\r\n\r\n  const handleEditActivity = (e, data) => {\r\n    history.push(`/manage/activity/edit/${data.id}`);\r\n  };\r\n\r\n  const handleEditApplicant = (e, data) => {\r\n    history.push(`/manage/activity/applicant/${data.id}`);\r\n  };\r\n\r\n  // const handleDownload = (e, data) => {\r\n  //   setExportApplicant(<ExportApplicant id={data.id} activity={data.name} />);\r\n  // };\r\n\r\n  const TableTitle = ({ icon, title }) => {\r\n    return (\r\n      <h5 className=\"pt-2\">\r\n        {icon} &nbsp;{title}\r\n      </h5>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"row py-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row justify-content-center px-2\">\r\n          <div className=\"col-12\">\r\n            {activities ? (\r\n              <div>\r\n                {window.innerWidth < 720 && (\r\n                  <div className=\"col-12 pt-2 h5\">\r\n                    <AccessibilityNewIcon\r\n                      className=\"colorDefault2\"\r\n                      fontSize=\"large\"\r\n                    />{\" \"}\r\n                    &nbsp;Activity Manager\r\n                  </div>\r\n                )}\r\n                <TableContainer component={Card} className=\"colorItem\">\r\n                  <MaterialTable\r\n                    title={\r\n                      window.innerWidth > 720 ? (\r\n                        <TableTitle\r\n                          icon={\r\n                            <AccessibilityNewIcon\r\n                              className=\"colorDefault2\"\r\n                              fontSize=\"large\"\r\n                            />\r\n                          }\r\n                          title=\"Activity Manager\"\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )\r\n                    }\r\n                    columns={activities.columns}\r\n                    data={activities.data}\r\n                    actions={[\r\n                      {\r\n                        icon: \"edit\",\r\n                        tooltip: \"Edit Activity\",\r\n                        onClick: (e, data) => handleEditActivity(e, data)\r\n                      },\r\n                      {\r\n                        icon: () => <PeopleAltIcon />,\r\n                        tooltip: \"Edit Applicant\",\r\n                        onClick: (e, data) => handleEditApplicant(e, data)\r\n                      },\r\n                      // {\r\n                      //   icon: () => <GetAppIcon />,\r\n                      //   tooltip: \"Download Applicant\",\r\n                      //   onClick: (e, data) => handleDownload(e, data)\r\n                      // },\r\n                      {\r\n                        icon: \"add\",\r\n                        tooltip: \"Add Reward\",\r\n                        isFreeAction: true,\r\n                        onClick: e => handleAddActivity()\r\n                      }\r\n                    ]}\r\n                    options={{\r\n                      actionsColumnIndex: -1,\r\n                      headerStyle: {\r\n                        backgroundColor: \"#f1f3f4\",\r\n                        fontSize: \"105%\",\r\n                        textAlign: \"center\"\r\n                      },\r\n                      cellStyle: {\r\n                        textAlign: \"center\"\r\n                      },\r\n                      pageSizeOptions:\r\n                        window.innerWidth > 1024 ? [5, 10, 20] : [5]\r\n                    }}\r\n                    onRowClick={() => null}\r\n                    localization={{\r\n                      body: {\r\n                        emptyDataSourceMessage: \"No activities !\"\r\n                      }\r\n                    }}\r\n                  />\r\n                </TableContainer>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={50}\r\n                  animation=\"wave\"\r\n                />\r\n                <Skeleton width=\"100%\" animation=\"wave\" />\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  width=\"100%\"\r\n                  height={500}\r\n                  animation=\"wave\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* {exportApplicant} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Router, Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\n// Sub Components\r\nimport RewardDetail from \"./components/Coin/Member/RewardPlace/RewardDetail\";\r\nimport ActivityDetail from \"./components/Coin/Member/ActivityPlace/ActivityDetail\";\r\nimport RewardManager from \"./components/Coin/Admin/RewardManager/RewardManager\";\r\nimport ActivityManager from \"./components/Coin/Admin/ActivityManager/ActivityManager\";\r\nimport ApplicantManager from \"./components/Coin/Admin/ActivityManager/ApplicantManager\";\r\n\r\n// Main Components\r\nimport Login from \"./components/Coin/MainPage/Login\";\r\nimport Home from \"./components/Coin/MainPage/Home\";\r\nimport Transfer from \"./components/Coin/MainPage/Transfer\";\r\nimport RewardPlace from \"./components/Coin/Member/RewardPlace/RewardPlace\";\r\nimport ActivityPlace from \"./components/Coin/Member/ActivityPlace/ActivityPlace\";\r\nimport RedeemTransaction from \"./components/Coin/Member/RedeemTransaction/RedeemTransaction\";\r\nimport ActivityTransaction from \"./components/Coin/Member/ActivityTransaction/ActivityTransaction\";\r\nimport TransferTransactionAdmin from \"./components/Coin/Admin/TransferTransaction/TransferTransaction\";\r\nimport RedeemTransactionAdmin from \"./components/Coin/Admin/RedeemTransaction/RedeemTransaction\";\r\nimport RewardList from \"./components/Coin/Admin/RewardManager/RewardList\";\r\nimport ActivityList from \"./components/Coin/Admin/ActivityManager/ActivityList\";\r\n\r\nimport history from \"./history\";\r\n\r\nexport default function Routes(props) {\r\n  const { loginAuth, setParentState, setMenuSelected } = props;\r\n\r\n  const Logout = withRouter(({ history }) => {\r\n    return (\r\n      <div\r\n        onClick={loginAuth.signout(() => {\r\n          history.push(\"/\");\r\n          setParentState(false);\r\n        })}\r\n      />\r\n    );\r\n  });\r\n\r\n  const PrivateRoute = ({ type, component: Component, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        loginAuth.isAuthenticated ? (\r\n          loginAuth.isAuthenticated === type ||\r\n            type === \"3\" ||\r\n            (loginAuth.isAuthenticated !== 3 && type === \"2\") ? (\r\n              <Component\r\n                {...props}\r\n                loginAuth={loginAuth}\r\n                setMenuSelected={setMenuSelected}\r\n              />\r\n            ) : (\r\n              history.goBack()\r\n            )\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route\r\n          path=\"/login\"\r\n          render={props => (\r\n            <Login\r\n              {...props}\r\n              loginAuth={loginAuth}\r\n              setParentState={setParentState}\r\n            />\r\n          )}\r\n        />\r\n        <PrivateRoute exact path=\"/\" component={Home} type=\"3\" />\r\n        <PrivateRoute path=\"/reward/:id\" component={RewardDetail} type=\"3\" />\r\n        <PrivateRoute\r\n          path=\"/activity/:id\"\r\n          component={ActivityDetail}\r\n          type=\"3\"\r\n        />\r\n        <PrivateRoute path=\"/transfer\" component={Transfer} type=\"3\" />\r\n        <PrivateRoute path=\"/reward\" component={RewardPlace} type=\"3\" />\r\n        <PrivateRoute path=\"/activity\" component={ActivityPlace} type=\"3\" />\r\n        <PrivateRoute\r\n          path=\"/transaction/redeem\"\r\n          component={RedeemTransaction}\r\n          type=\"3\"\r\n        />\r\n        <PrivateRoute\r\n          path=\"/transaction/activity\"\r\n          component={ActivityTransaction}\r\n          type=\"3\"\r\n        />\r\n        <PrivateRoute\r\n          path=\"/transfering\"\r\n          component={TransferTransactionAdmin}\r\n          type=\"2\"\r\n        />\r\n        <PrivateRoute\r\n          path=\"/redemption\"\r\n          component={RedeemTransactionAdmin}\r\n          type=\"1\"\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/manage/reward\"\r\n          component={RewardList}\r\n          type=\"1\"\r\n        />\r\n        <PrivateRoute\r\n          path=\"/manage/reward/add\"\r\n          component={RewardManager}\r\n          type=\"1\"\r\n        />\r\n        <PrivateRoute\r\n          path=\"/manage/reward/edit/:id\"\r\n          component={RewardManager}\r\n          type=\"1\"\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/manage/activity\"\r\n          component={ActivityList}\r\n          type=\"1\"\r\n        />\r\n        <PrivateRoute\r\n          path=\"/manage/activity/add\"\r\n          component={ActivityManager}\r\n          type=\"1\"\r\n        />\r\n        <PrivateRoute\r\n          path=\"/manage/activity/edit/:id\"\r\n          component={ActivityManager}\r\n          type=\"1\"\r\n        />\r\n        <PrivateRoute\r\n          path=\"/manage/activity/applicant/:id\"\r\n          component={ApplicantManager}\r\n          type=\"1\"\r\n        />\r\n        <PrivateRoute path=\"/logout\" component={Logout} type=\"3\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nimport Header from \"./components/Coin/MainPage/Header\";\r\nimport Routes from \"./Routes\";\r\n\r\nconst loginAuth = {\r\n  isAuthenticated: false,\r\n  // detail\r\n  // 1=admin, 2=manager, 3=user\r\n  authenticate(cb, type) {\r\n    this.isAuthenticated = type;\r\n    setTimeout(cb, 100);\r\n  },\r\n  signout(cb) {\r\n    this.isAuthenticated = false;\r\n    setTimeout(cb, 100);\r\n  }\r\n};\r\n\r\n//export default class App extends Component {\r\nconst App = () => {\r\n  const [state, setState] = useState(false);\r\n  const [menuSelected, setMenuSelected] = useState(\"\");\r\n\r\n  return (\r\n    <Router>\r\n      <SnackbarProvider\r\n        maxSnack={2}\r\n        autoHideDuration={2000}\r\n        hideIconVariant={false}\r\n      >\r\n        {/* <button\r\n          onClick={() => this.setState({ isLogin: !this.state.isLogin })}\r\n          style={{ margin: \"auto\" }}\r\n        >\r\n          Click Me to re render\r\n        </button> */}\r\n        <Header\r\n          content={\r\n            <Routes\r\n              loginAuth={loginAuth}\r\n              setParentState={setState}\r\n              setMenuSelected={setMenuSelected}\r\n            />\r\n          }\r\n          loginAuth={loginAuth}\r\n          menuSelected={menuSelected}\r\n          setMenuSelected={setMenuSelected}\r\n        />\r\n      </SnackbarProvider>\r\n    </Router>\r\n  );\r\n  // }\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n//import \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\nimport \"./styles.css\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\n// import App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}